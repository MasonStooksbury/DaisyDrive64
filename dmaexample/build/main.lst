ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZL17HAL_TransferErrorP19__DMA_HandleTypeDef,"ax",%progbits
  19              		.align	1
  20              		.p2align 2,,3
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	_ZL17HAL_TransferErrorP19__DMA_HandleTypeDef:
  26              	.LVL0:
  27              	.LFB564:
  28              		.file 1 "main.cpp"
   1:main.cpp      **** /**
   2:main.cpp      ****   ******************************************************************************
   3:main.cpp      ****   * @file    DMA/DMAMUX_RequestGen/Src/main.c
   4:main.cpp      ****   * @author  MCD Application Team
   5:main.cpp      ****   * @brief   This example shows how to use the DMA with the DMAMUX to
   6:main.cpp      ****   *          request generator using the STM32H7xx HAL API.
   7:main.cpp      ****   ******************************************************************************
   8:main.cpp      ****   * @attention
   9:main.cpp      ****   *
  10:main.cpp      ****   * Copyright (c) 2019 STMicroelectronics.
  11:main.cpp      ****   * All rights reserved.
  12:main.cpp      ****   *
  13:main.cpp      ****   * This software is licensed under terms that can be found in the LICENSE file
  14:main.cpp      ****   * in the root directory of this software component.
  15:main.cpp      ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:main.cpp      ****   *
  17:main.cpp      ****   ******************************************************************************
  18:main.cpp      ****   */
  19:main.cpp      **** 
  20:main.cpp      **** /* Includes ------------------------------------------------------------------*/
  21:main.cpp      **** //#include "main.h"
  22:main.cpp      **** #include "stm32h7xx_hal.h"
  23:main.cpp      **** #include "sys/system.h"
  24:main.cpp      **** 
  25:main.cpp      **** /** @addtogroup STM32H7xx_HAL_Examples
  26:main.cpp      ****   * @{
  27:main.cpp      ****   */
  28:main.cpp      **** 
  29:main.cpp      **** /** @defgroup DMAMUX_RequestGen
  30:main.cpp      ****   * @{
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 2


  31:main.cpp      ****   */
  32:main.cpp      **** 
  33:main.cpp      **** /* Private typedef -----------------------------------------------------------*/
  34:main.cpp      **** /* Private define ------------------------------------------------------------*/
  35:main.cpp      **** /* Private macro -------------------------------------------------------------*/
  36:main.cpp      **** /* Private variables ---------------------------------------------------------*/
  37:main.cpp      **** #define LED1_PIN 0x1
  38:main.cpp      **** __IO   uint32_t DMA_TransferErrorFlag = 0;
  39:main.cpp      **** 
  40:main.cpp      **** #if defined ( __CC_ARM )  /* !< ARM Compiler */
  41:main.cpp      ****   uint32_t SRC_Buffer_LED1_Toggle[2] __attribute__((section(".RAM_D3"))) =
  42:main.cpp      ****                                       {  0,          /*Value for LED 1 ON  */
  43:main.cpp      ****                                          LED1_PIN    /*Value for LED 1 OFF */
  44:main.cpp      ****                                       } ;
  45:main.cpp      **** #elif defined ( __ICCARM__ )  /* !< ICCARM Compiler */
  46:main.cpp      **** #pragma location = 0x38000000
  47:main.cpp      **** uint32_t SRC_Buffer_LED1_Toggle[2]  =
  48:main.cpp      ****                                       {  0,          /*Value for LED 1 ON  */
  49:main.cpp      ****                                          LED1_PIN    /*Value for LED 1 OFF */
  50:main.cpp      ****                                       };
  51:main.cpp      **** #elif defined ( __GNUC__ )  /* !< GNU Compiler */
  52:main.cpp      ****   uint32_t SRC_Buffer_LED1_Toggle[2]  __attribute__((section(".RAM_D3"))) =
  53:main.cpp      ****                                       {  0,          /*Value for LED 1 ON  */
  54:main.cpp      ****                                          LED1_PIN    /*Value for LED 1 OFF */
  55:main.cpp      ****                                       } ;
  56:main.cpp      **** #endif 
  57:main.cpp      **** 
  58:main.cpp      **** DMA_HandleTypeDef DMA_Handle;
  59:main.cpp      **** LPTIM_HandleTypeDef  LptimHandle;
  60:main.cpp      **** 
  61:main.cpp      **** /* Private function prototypes -----------------------------------------------*/
  62:main.cpp      **** static void SystemClock_Config(void);
  63:main.cpp      **** static void CPU_CACHE_Enable(void);
  64:main.cpp      **** void LPTIM_Config(void);
  65:main.cpp      **** static void HAL_TransferError(DMA_HandleTypeDef *hdma);
  66:main.cpp      **** static void Error_Handler(void);
  67:main.cpp      **** 
  68:main.cpp      **** /* Private functions ---------------------------------------------------------*/
  69:main.cpp      **** 
  70:main.cpp      **** /**
  71:main.cpp      ****   * @brief  Main program
  72:main.cpp      ****   * @param  None
  73:main.cpp      ****   * @retval None
  74:main.cpp      ****   */
  75:main.cpp      **** int main(void)
  76:main.cpp      **** {
  77:main.cpp      **** 
  78:main.cpp      ****   HAL_DMA_MuxRequestGeneratorConfigTypeDef dmamux_ReqGenParams;
  79:main.cpp      **** 
  80:main.cpp      **** 
  81:main.cpp      ****   /* Enable the CPU Cache */
  82:main.cpp      ****   CPU_CACHE_Enable();
  83:main.cpp      **** 
  84:main.cpp      ****   /* STM32H7xx HAL library initialization:
  85:main.cpp      ****      - Systick timer is configured by default as source of time base, but user
  86:main.cpp      ****        can eventually implement his proper time base source (a general purpose
  87:main.cpp      ****        timer for example or other time source), keeping in mind that Time base
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 3


  88:main.cpp      ****        duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
  89:main.cpp      ****        handled in milliseconds basis.
  90:main.cpp      ****      - Set NVIC Group Priority to 4
  91:main.cpp      ****      - Low Level Initialization
  92:main.cpp      ****   */
  93:main.cpp      ****   HAL_Init();
  94:main.cpp      **** 
  95:main.cpp      ****   /* Configure the system clock to 400 MHz */
  96:main.cpp      ****   SystemClock_Config();
  97:main.cpp      **** 
  98:main.cpp      ****   /* -1- Initialize LEDs */
  99:main.cpp      ****   //BSP_LED_Init(LED1);
 100:main.cpp      ****   //BSP_LED_Init(LED2);
 101:main.cpp      **** 
 102:main.cpp      **** 
 103:main.cpp      ****   /*##-2- Configure the DMA ##################################################*/
 104:main.cpp      **** 
 105:main.cpp      ****   /* Enable BDMA clock */
 106:main.cpp      ****   __HAL_RCC_BDMA_CLK_ENABLE();
 107:main.cpp      **** 
 108:main.cpp      ****   /* Configure the DMA handler for Transmission process     */
 109:main.cpp      ****   /* DMA mode is set to circular for an infinite DMA transfer */
 110:main.cpp      ****   DMA_Handle.Instance                 = BDMA_Channel0;
 111:main.cpp      **** 
 112:main.cpp      ****   DMA_Handle.Init.Request             = BDMA_REQUEST_GENERATOR0;
 113:main.cpp      ****   DMA_Handle.Init.Direction           = DMA_MEMORY_TO_PERIPH;
 114:main.cpp      ****   DMA_Handle.Init.PeriphInc           = DMA_PINC_DISABLE;
 115:main.cpp      ****   DMA_Handle.Init.MemInc              = DMA_MINC_ENABLE;
 116:main.cpp      ****   DMA_Handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 117:main.cpp      ****   DMA_Handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 118:main.cpp      ****   DMA_Handle.Init.Mode                = DMA_CIRCULAR;
 119:main.cpp      ****   DMA_Handle.Init.Priority            = DMA_PRIORITY_LOW;
 120:main.cpp      ****   DMA_Handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 121:main.cpp      ****   DMA_Handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 122:main.cpp      ****   DMA_Handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 123:main.cpp      ****   DMA_Handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 124:main.cpp      **** 
 125:main.cpp      ****   /* Initialize the DMA with for Transmission process */
 126:main.cpp      ****   HAL_DMA_Init(&DMA_Handle);
 127:main.cpp      **** 
 128:main.cpp      ****   /* Select Callbacks functions called after Transfer complete and Transfer error */
 129:main.cpp      ****   HAL_DMA_RegisterCallback(&DMA_Handle, HAL_DMA_XFER_CPLT_CB_ID, NULL);
 130:main.cpp      ****   HAL_DMA_RegisterCallback(&DMA_Handle, HAL_DMA_XFER_ERROR_CB_ID, HAL_TransferError);
 131:main.cpp      **** 
 132:main.cpp      ****   /* NVIC configuration for DMA transfer complete interrupt*/
 133:main.cpp      ****   HAL_NVIC_SetPriority(BDMA_Channel0_IRQn, 0, 1);
 134:main.cpp      ****   HAL_NVIC_EnableIRQ(BDMA_Channel0_IRQn);
 135:main.cpp      **** 
 136:main.cpp      ****   /*##-3- Configure and enable the DMAMUX Request generator  ####################*/
 137:main.cpp      ****   dmamux_ReqGenParams.SignalID  = HAL_DMAMUX2_REQ_GEN_LPTIM2_OUT; /* External request signal is LPT
 138:main.cpp      ****   dmamux_ReqGenParams.Polarity  = HAL_DMAMUX_REQ_GEN_RISING;      /* External request signal edge i
 139:main.cpp      ****   dmamux_ReqGenParams.RequestNumber = 1;                          /* 1 requests on each edge of the
 140:main.cpp      **** 
 141:main.cpp      ****   HAL_DMAEx_ConfigMuxRequestGenerator(&DMA_Handle, &dmamux_ReqGenParams);
 142:main.cpp      **** 
 143:main.cpp      ****   /* NVIC configuration for DMAMUX request generator overrun errors*/
 144:main.cpp      ****   HAL_NVIC_SetPriority(DMAMUX2_OVR_IRQn, 0, 1);
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 4


 145:main.cpp      ****   HAL_NVIC_EnableIRQ(DMAMUX2_OVR_IRQn);
 146:main.cpp      **** 
 147:main.cpp      ****   HAL_DMAEx_EnableMuxRequestGenerator (&DMA_Handle);
 148:main.cpp      **** 
 149:main.cpp      ****   /*##-4- Configure and enable the LPTIM2 used as DMA external request generator signal #####*/
 150:main.cpp      ****   LPTIM_Config();
 151:main.cpp      **** 
 152:main.cpp      ****   /*##-5- Start the DMA transfer ################################################*/
 153:main.cpp      ****   /* DMA source buffer is  SRC_BUFFER_LED1_TOGGLE containing values to be written
 154:main.cpp      ****   to GPIOB ODR register in order to turn LED1 On/Off each time comes a request from the DMAMUX requ
 155:main.cpp      ****   HAL_DMA_Start_IT(&DMA_Handle, (uint32_t)SRC_Buffer_LED1_Toggle, (uint32_t)&GPIOA->ODR, 2);
 156:main.cpp      **** 
 157:main.cpp      ****   /* Infinite loop */
 158:main.cpp      ****   while (1)
 159:main.cpp      ****   {
 160:main.cpp      ****     if(DMA_TransferErrorFlag != 0)
 161:main.cpp      ****     {
 162:main.cpp      ****       Error_Handler();
 163:main.cpp      ****     }
 164:main.cpp      ****   }
 165:main.cpp      **** }
 166:main.cpp      **** 
 167:main.cpp      **** /**
 168:main.cpp      ****   * @brief  Configure and start the LPTIM2 with 2sec period and 50% duty cycle.
 169:main.cpp      ****   * @param  None
 170:main.cpp      ****   * @retval None
 171:main.cpp      ****   */
 172:main.cpp      **** void LPTIM_Config(void)
 173:main.cpp      **** {
 174:main.cpp      **** 
 175:main.cpp      ****   uint32_t periodValue;
 176:main.cpp      ****   uint32_t pulseValue ;
 177:main.cpp      **** 
 178:main.cpp      ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 179:main.cpp      ****   RCC_PeriphCLKInitTypeDef  PeriphClkInitStruct;
 180:main.cpp      **** 
 181:main.cpp      ****   /* Enable the LSE clock source */
 182:main.cpp      ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSE;
 183:main.cpp      ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 184:main.cpp      ****   HAL_RCC_OscConfig(&RCC_OscInitStruct);
 185:main.cpp      **** 
 186:main.cpp      ****   /* LPTIM2 clock source set to LSE*/
 187:main.cpp      ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LPTIM2;
 188:main.cpp      ****   PeriphClkInitStruct.Lptim2ClockSelection = RCC_LPTIM2CLKSOURCE_LSE;
 189:main.cpp      ****   HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
 190:main.cpp      **** 
 191:main.cpp      ****   periodValue = (2 * LSE_VALUE)/4;    /* Calculate the Timer  Autoreload value for 2sec period */
 192:main.cpp      ****   pulseValue  = periodValue/2;        /* Set the Timer  pulse value for 50% duty cycle         */
 193:main.cpp      **** 
 194:main.cpp      ****   /* TIM1 Peripheral clock enable */
 195:main.cpp      ****   __HAL_RCC_LPTIM2_CLK_ENABLE();
 196:main.cpp      **** 
 197:main.cpp      ****   LptimHandle.Instance                           = LPTIM2;
 198:main.cpp      **** 
 199:main.cpp      ****   LptimHandle.Init.CounterSource                 = LPTIM_COUNTERSOURCE_INTERNAL;
 200:main.cpp      ****   LptimHandle.Init.UpdateMode                    = LPTIM_UPDATE_ENDOFPERIOD;
 201:main.cpp      ****   LptimHandle.Init.OutputPolarity                = LPTIM_OUTPUTPOLARITY_LOW;
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 5


 202:main.cpp      ****   LptimHandle.Init.Clock.Source                  = LPTIM_CLOCKSOURCE_APBCLOCK_LPOSC;
 203:main.cpp      ****   LptimHandle.Init.Clock.Prescaler               = LPTIM_PRESCALER_DIV4;
 204:main.cpp      ****   LptimHandle.Init.UltraLowPowerClock.Polarity   = LPTIM_CLOCKPOLARITY_RISING;
 205:main.cpp      ****   LptimHandle.Init.UltraLowPowerClock.SampleTime = LPTIM_CLOCKSAMPLETIME_DIRECTTRANSITION;
 206:main.cpp      ****   LptimHandle.Init.Trigger.Source                = LPTIM_TRIGSOURCE_SOFTWARE;
 207:main.cpp      ****   LptimHandle.Init.Trigger.ActiveEdge            = LPTIM_ACTIVEEDGE_RISING;
 208:main.cpp      ****   LptimHandle.Init.Trigger.SampleTime            = LPTIM_TRIGSAMPLETIME_DIRECTTRANSITION;
 209:main.cpp      **** 
 210:main.cpp      ****   if(HAL_LPTIM_Init(&LptimHandle) != HAL_OK)
 211:main.cpp      ****   {
 212:main.cpp      ****     /* Initialization Error */
 213:main.cpp      ****     Error_Handler();
 214:main.cpp      ****   }
 215:main.cpp      **** 
 216:main.cpp      ****   /* Start the timer */
 217:main.cpp      ****   if (HAL_LPTIM_PWM_Start(&LptimHandle, periodValue, pulseValue) != HAL_OK)
 218:main.cpp      ****   {
 219:main.cpp      ****     Error_Handler();
 220:main.cpp      ****   }
 221:main.cpp      **** 
 222:main.cpp      **** }
 223:main.cpp      **** 
 224:main.cpp      **** static void HAL_TransferError(DMA_HandleTypeDef *hdma)
 225:main.cpp      **** {
  29              		.loc 1 225 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 226:main.cpp      ****   DMA_TransferErrorFlag = 1;
  34              		.loc 1 226 3 view .LVU1
  35              		.loc 1 226 25 is_stmt 0 view .LVU2
  36 0000 014B     		ldr	r3, .L3
  37 0002 0122     		movs	r2, #1
  38 0004 1A60     		str	r2, [r3]
 227:main.cpp      **** }
  39              		.loc 1 227 1 view .LVU3
  40 0006 7047     		bx	lr
  41              	.L4:
  42              		.align	2
  43              	.L3:
  44 0008 00000000 		.word	.LANCHOR0
  45              		.cfi_endproc
  46              	.LFE564:
  48              		.section	.text._Z12LPTIM_Configv,"ax",%progbits
  49              		.align	1
  50              		.p2align 2,,3
  51              		.global	_Z12LPTIM_Configv
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  56              	_Z12LPTIM_Configv:
  57              	.LFB563:
 173:main.cpp      **** 
  58              		.loc 1 173 1 is_stmt 1 view -0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 272
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 6


  61              		@ frame_needed = 0, uses_anonymous_args = 0
 175:main.cpp      ****   uint32_t pulseValue ;
  62              		.loc 1 175 3 view .LVU5
 176:main.cpp      **** 
  63              		.loc 1 176 3 view .LVU6
 178:main.cpp      ****   RCC_PeriphCLKInitTypeDef  PeriphClkInitStruct;
  64              		.loc 1 178 3 view .LVU7
 179:main.cpp      **** 
  65              		.loc 1 179 3 view .LVU8
 182:main.cpp      ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
  66              		.loc 1 182 3 view .LVU9
 173:main.cpp      **** 
  67              		.loc 1 173 1 is_stmt 0 view .LVU10
  68 0000 10B5     		push	{r4, lr}
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 4, -8
  71              		.cfi_offset 14, -4
  72 0002 C4B0     		sub	sp, sp, #272
  73              		.cfi_def_cfa_offset 280
 182:main.cpp      ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
  74              		.loc 1 182 36 view .LVU11
  75 0004 0422     		movs	r2, #4
 183:main.cpp      ****   HAL_RCC_OscConfig(&RCC_OscInitStruct);
  76              		.loc 1 183 30 view .LVU12
  77 0006 0123     		movs	r3, #1
 197:main.cpp      **** 
  78              		.loc 1 197 50 view .LVU13
  79 0008 214C     		ldr	r4, .L11
 184:main.cpp      **** 
  80              		.loc 1 184 20 view .LVU14
  81 000a 02A8     		add	r0, sp, #8
 182:main.cpp      ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
  82              		.loc 1 182 36 view .LVU15
  83 000c 0292     		str	r2, [sp, #8]
 183:main.cpp      ****   HAL_RCC_OscConfig(&RCC_OscInitStruct);
  84              		.loc 1 183 3 is_stmt 1 view .LVU16
 183:main.cpp      ****   HAL_RCC_OscConfig(&RCC_OscInitStruct);
  85              		.loc 1 183 30 is_stmt 0 view .LVU17
  86 000e 0493     		str	r3, [sp, #16]
 184:main.cpp      **** 
  87              		.loc 1 184 3 is_stmt 1 view .LVU18
 184:main.cpp      **** 
  88              		.loc 1 184 20 is_stmt 0 view .LVU19
  89 0010 FFF7FEFF 		bl	HAL_RCC_OscConfig
  90              	.LVL1:
 187:main.cpp      ****   PeriphClkInitStruct.Lptim2ClockSelection = RCC_LPTIM2CLKSOURCE_LSE;
  91              		.loc 1 187 3 is_stmt 1 view .LVU20
 187:main.cpp      ****   PeriphClkInitStruct.Lptim2ClockSelection = RCC_LPTIM2CLKSOURCE_LSE;
  92              		.loc 1 187 44 is_stmt 0 view .LVU21
  93 0014 4022     		movs	r2, #64
 188:main.cpp      ****   HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
  94              		.loc 1 188 44 view .LVU22
  95 0016 4FF44063 		mov	r3, #3072
 189:main.cpp      **** 
  96              		.loc 1 189 28 view .LVU23
  97 001a 15A8     		add	r0, sp, #84
 187:main.cpp      ****   PeriphClkInitStruct.Lptim2ClockSelection = RCC_LPTIM2CLKSOURCE_LSE;
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 7


  98              		.loc 1 187 44 view .LVU24
  99 001c 1592     		str	r2, [sp, #84]
 188:main.cpp      ****   HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
 100              		.loc 1 188 3 is_stmt 1 view .LVU25
 188:main.cpp      ****   HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
 101              		.loc 1 188 44 is_stmt 0 view .LVU26
 102 001e 3B93     		str	r3, [sp, #236]
 189:main.cpp      **** 
 103              		.loc 1 189 3 is_stmt 1 view .LVU27
 189:main.cpp      **** 
 104              		.loc 1 189 28 is_stmt 0 view .LVU28
 105 0020 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 106              	.LVL2:
 191:main.cpp      ****   pulseValue  = periodValue/2;        /* Set the Timer  pulse value for 50% duty cycle         */
 107              		.loc 1 191 3 is_stmt 1 view .LVU29
 192:main.cpp      **** 
 108              		.loc 1 192 3 view .LVU30
 195:main.cpp      **** 
 109              		.loc 1 195 3 view .LVU31
 110              	.LBB37:
 195:main.cpp      **** 
 111              		.loc 1 195 3 view .LVU32
 195:main.cpp      **** 
 112              		.loc 1 195 3 view .LVU33
 113 0024 1B4A     		ldr	r2, .L11+4
 114              	.LBE37:
 199:main.cpp      ****   LptimHandle.Init.UpdateMode                    = LPTIM_UPDATE_ENDOFPERIOD;
 115              		.loc 1 199 50 is_stmt 0 view .LVU34
 116 0026 0023     		movs	r3, #0
 210:main.cpp      ****   {
 117              		.loc 1 210 20 view .LVU35
 118 0028 2046     		mov	r0, r4
 119              	.LBB38:
 195:main.cpp      **** 
 120              		.loc 1 195 3 view .LVU36
 121 002a D2F8F410 		ldr	r1, [r2, #244]
 122              	.LBE38:
 199:main.cpp      ****   LptimHandle.Init.UpdateMode                    = LPTIM_UPDATE_ENDOFPERIOD;
 123              		.loc 1 199 50 view .LVU37
 124 002e A362     		str	r3, [r4, #40]
 125              	.LBB39:
 195:main.cpp      **** 
 126              		.loc 1 195 3 view .LVU38
 127 0030 41F40071 		orr	r1, r1, #512
 128              	.LBE39:
 202:main.cpp      ****   LptimHandle.Init.Clock.Prescaler               = LPTIM_PRESCALER_DIV4;
 129              		.loc 1 202 50 view .LVU39
 130 0034 6360     		str	r3, [r4, #4]
 208:main.cpp      **** 
 131              		.loc 1 208 50 view .LVU40
 132 0036 E361     		str	r3, [r4, #28]
 205:main.cpp      ****   LptimHandle.Init.Trigger.Source                = LPTIM_TRIGSOURCE_SOFTWARE;
 133              		.loc 1 205 50 view .LVU41
 134 0038 C4E90333 		strd	r3, r3, [r4, #12]
 135              	.LBB40:
 195:main.cpp      **** 
 136              		.loc 1 195 3 view .LVU42
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 8


 137 003c C2F8F410 		str	r1, [r2, #244]
 195:main.cpp      **** 
 138              		.loc 1 195 3 is_stmt 1 view .LVU43
 139 0040 D2F8F430 		ldr	r3, [r2, #244]
 140              	.LBE40:
 197:main.cpp      **** 
 141              		.loc 1 197 50 is_stmt 0 view .LVU44
 142 0044 A2F50832 		sub	r2, r2, #139264
 143              	.LBB41:
 195:main.cpp      **** 
 144              		.loc 1 195 3 view .LVU45
 145 0048 03F40073 		and	r3, r3, #512
 146              	.LBE41:
 197:main.cpp      **** 
 147              		.loc 1 197 50 view .LVU46
 148 004c 2260     		str	r2, [r4]
 206:main.cpp      ****   LptimHandle.Init.Trigger.ActiveEdge            = LPTIM_ACTIVEEDGE_RISING;
 149              		.loc 1 206 50 view .LVU47
 150 004e 4FF6FF72 		movw	r2, #65535
 151              	.LBB42:
 195:main.cpp      **** 
 152              		.loc 1 195 3 view .LVU48
 153 0052 0193     		str	r3, [sp, #4]
 195:main.cpp      **** 
 154              		.loc 1 195 3 is_stmt 1 view .LVU49
 155              	.LBE42:
 200:main.cpp      ****   LptimHandle.Init.OutputPolarity                = LPTIM_OUTPUTPOLARITY_LOW;
 156              		.loc 1 200 50 is_stmt 0 view .LVU50
 157 0054 4FF48003 		mov	r3, #4194304
 158              	.LBB43:
 195:main.cpp      **** 
 159              		.loc 1 195 3 view .LVU51
 160 0058 0199     		ldr	r1, [sp, #4]
 161              	.LBE43:
 197:main.cpp      **** 
 162              		.loc 1 197 3 is_stmt 1 view .LVU52
 199:main.cpp      ****   LptimHandle.Init.UpdateMode                    = LPTIM_UPDATE_ENDOFPERIOD;
 163              		.loc 1 199 3 view .LVU53
 200:main.cpp      ****   LptimHandle.Init.OutputPolarity                = LPTIM_OUTPUTPOLARITY_LOW;
 164              		.loc 1 200 3 view .LVU54
 201:main.cpp      ****   LptimHandle.Init.Clock.Source                  = LPTIM_CLOCKSOURCE_APBCLOCK_LPOSC;
 165              		.loc 1 201 50 is_stmt 0 view .LVU55
 166 005a 4FF40011 		mov	r1, #2097152
 200:main.cpp      ****   LptimHandle.Init.OutputPolarity                = LPTIM_OUTPUTPOLARITY_LOW;
 167              		.loc 1 200 50 view .LVU56
 168 005e 6362     		str	r3, [r4, #36]
 201:main.cpp      ****   LptimHandle.Init.Clock.Source                  = LPTIM_CLOCKSOURCE_APBCLOCK_LPOSC;
 169              		.loc 1 201 3 is_stmt 1 view .LVU57
 203:main.cpp      ****   LptimHandle.Init.UltraLowPowerClock.Polarity   = LPTIM_CLOCKPOLARITY_RISING;
 170              		.loc 1 203 50 is_stmt 0 view .LVU58
 171 0060 4FF48063 		mov	r3, #1024
 201:main.cpp      ****   LptimHandle.Init.Clock.Source                  = LPTIM_CLOCKSOURCE_APBCLOCK_LPOSC;
 172              		.loc 1 201 50 view .LVU59
 173 0064 2162     		str	r1, [r4, #32]
 202:main.cpp      ****   LptimHandle.Init.Clock.Prescaler               = LPTIM_PRESCALER_DIV4;
 174              		.loc 1 202 3 is_stmt 1 view .LVU60
 203:main.cpp      ****   LptimHandle.Init.UltraLowPowerClock.Polarity   = LPTIM_CLOCKPOLARITY_RISING;
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 9


 175              		.loc 1 203 3 view .LVU61
 203:main.cpp      ****   LptimHandle.Init.UltraLowPowerClock.Polarity   = LPTIM_CLOCKPOLARITY_RISING;
 176              		.loc 1 203 50 is_stmt 0 view .LVU62
 177 0066 A360     		str	r3, [r4, #8]
 204:main.cpp      ****   LptimHandle.Init.UltraLowPowerClock.SampleTime = LPTIM_CLOCKSAMPLETIME_DIRECTTRANSITION;
 178              		.loc 1 204 3 is_stmt 1 view .LVU63
 205:main.cpp      ****   LptimHandle.Init.Trigger.Source                = LPTIM_TRIGSOURCE_SOFTWARE;
 179              		.loc 1 205 3 view .LVU64
 206:main.cpp      ****   LptimHandle.Init.Trigger.ActiveEdge            = LPTIM_ACTIVEEDGE_RISING;
 180              		.loc 1 206 3 view .LVU65
 207:main.cpp      ****   LptimHandle.Init.Trigger.SampleTime            = LPTIM_TRIGSAMPLETIME_DIRECTTRANSITION;
 181              		.loc 1 207 50 is_stmt 0 view .LVU66
 182 0068 4FF40033 		mov	r3, #131072
 183 006c C4E90523 		strd	r2, r3, [r4, #20]
 208:main.cpp      **** 
 184              		.loc 1 208 3 is_stmt 1 view .LVU67
 210:main.cpp      ****   {
 185              		.loc 1 210 3 view .LVU68
 210:main.cpp      ****   {
 186              		.loc 1 210 20 is_stmt 0 view .LVU69
 187 0070 FFF7FEFF 		bl	HAL_LPTIM_Init
 188              	.LVL3:
 210:main.cpp      ****   {
 189              		.loc 1 210 3 view .LVU70
 190 0074 00B1     		cbz	r0, .L6
 191              	.L7:
 228:main.cpp      **** 
 229:main.cpp      **** /**
 230:main.cpp      ****   * @brief  This function is executed in case of error occurrence.
 231:main.cpp      ****   * @param  None
 232:main.cpp      ****   * @retval None
 233:main.cpp      ****   */
 234:main.cpp      **** static void Error_Handler(void)
 235:main.cpp      **** {
 236:main.cpp      ****   /* Turn LED2 on */
 237:main.cpp      ****   //BSP_LED_On(LED2);
 238:main.cpp      ****   while(1)
 192              		.loc 1 238 3 is_stmt 1 view .LVU71
 193              		.loc 1 238 3 view .LVU72
 194              		.loc 1 238 3 view .LVU73
 195              		.loc 1 238 3 view .LVU74
 196 0076 FEE7     		b	.L7
 197              	.L6:
 217:main.cpp      ****   {
 198              		.loc 1 217 3 view .LVU75
 217:main.cpp      ****   {
 199              		.loc 1 217 26 is_stmt 0 view .LVU76
 200 0078 4FF40052 		mov	r2, #8192
 201 007c 4FF48041 		mov	r1, #16384
 202 0080 2046     		mov	r0, r4
 203 0082 FFF7FEFF 		bl	HAL_LPTIM_PWM_Start
 204              	.LVL4:
 217:main.cpp      ****   {
 205              		.loc 1 217 3 view .LVU77
 206 0086 00B1     		cbz	r0, .L5
 207              	.L9:
 208              		.loc 1 238 3 is_stmt 1 view .LVU78
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 10


 209              		.loc 1 238 3 view .LVU79
 210              		.loc 1 238 3 view .LVU80
 211              		.loc 1 238 3 view .LVU81
 212 0088 FEE7     		b	.L9
 213              	.L5:
 222:main.cpp      **** 
 214              		.loc 1 222 1 is_stmt 0 view .LVU82
 215 008a 44B0     		add	sp, sp, #272
 216              		.cfi_def_cfa_offset 8
 217              		@ sp needed
 218 008c 10BD     		pop	{r4, pc}
 219              	.L12:
 220 008e 00BF     		.align	2
 221              	.L11:
 222 0090 00000000 		.word	.LANCHOR1
 223 0094 00440258 		.word	1476543488
 224              		.cfi_endproc
 225              	.LFE563:
 227              		.section	.text.startup.main,"ax",%progbits
 228              		.align	1
 229              		.p2align 2,,3
 230              		.global	main
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 235              	main:
 236              	.LFB562:
  76:main.cpp      **** 
 237              		.loc 1 76 1 is_stmt 1 view -0
 238              		.cfi_startproc
 239              		@ Volatile: function does not return.
 240              		@ args = 0, pretend = 0, frame = 112
 241              		@ frame_needed = 0, uses_anonymous_args = 0
  78:main.cpp      **** 
 242              		.loc 1 78 3 view .LVU84
  82:main.cpp      **** 
 243              		.loc 1 82 3 view .LVU85
 244              	.LBB74:
 245              	.LBI74:
 239:main.cpp      ****   {
 240:main.cpp      ****   }
 241:main.cpp      **** }
 242:main.cpp      **** 
 243:main.cpp      **** /**
 244:main.cpp      ****   * @brief  System Clock Configuration
 245:main.cpp      ****   *         The system Clock is configured as follow :
 246:main.cpp      ****   *            System Clock source            = PLL (HSE)
 247:main.cpp      ****   *            SYSCLK(Hz)                     = 400000000 (CPU Clock)
 248:main.cpp      ****   *            HCLK(Hz)                       = 200000000 (AXI and AHBs Clock)
 249:main.cpp      ****   *            AHB Prescaler                  = 2
 250:main.cpp      ****   *            D1 APB3 Prescaler              = 2 (APB3 Clock  100MHz)
 251:main.cpp      ****   *            D2 APB1 Prescaler              = 2 (APB1 Clock  100MHz)
 252:main.cpp      ****   *            D2 APB2 Prescaler              = 2 (APB2 Clock  100MHz)
 253:main.cpp      ****   *            D3 APB4 Prescaler              = 2 (APB4 Clock  100MHz)
 254:main.cpp      ****   *            HSE Frequency(Hz)              = 25000000
 255:main.cpp      ****   *            PLL_M                          = 5
 256:main.cpp      ****   *            PLL_N                          = 160
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 11


 257:main.cpp      ****   *            PLL_P                          = 2
 258:main.cpp      ****   *            PLL_Q                          = 4
 259:main.cpp      ****   *            PLL_R                          = 2
 260:main.cpp      ****   *            VDD(V)                         = 3.3
 261:main.cpp      ****   *            Flash Latency(WS)              = 4
 262:main.cpp      ****   * @param  None
 263:main.cpp      ****   * @retval None
 264:main.cpp      ****   */
 265:main.cpp      **** static void SystemClock_Config(void)
 266:main.cpp      **** {
 267:main.cpp      ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 268:main.cpp      ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 269:main.cpp      ****   HAL_StatusTypeDef ret = HAL_OK;
 270:main.cpp      **** 
 271:main.cpp      ****   /*!< Supply configuration update enable */
 272:main.cpp      ****    HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY); /* PWR set to LDO for the STM32H750B-DISCO board */
 273:main.cpp      **** 
 274:main.cpp      ****   /* The voltage scaling allows optimizing the power consumption when the device is
 275:main.cpp      ****      clocked below the maximum system frequency, to update the voltage scaling value
 276:main.cpp      ****      regarding system frequency refer to product datasheet.  */
 277:main.cpp      ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 278:main.cpp      **** 
 279:main.cpp      ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 280:main.cpp      **** 
 281:main.cpp      ****   /* Enable HSE Oscillator and activate PLL with HSE as source */
 282:main.cpp      ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 283:main.cpp      ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 284:main.cpp      ****   RCC_OscInitStruct.HSIState = RCC_HSI_OFF;
 285:main.cpp      ****   RCC_OscInitStruct.CSIState = RCC_CSI_OFF;
 286:main.cpp      ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 287:main.cpp      ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 288:main.cpp      **** 
 289:main.cpp      ****   RCC_OscInitStruct.PLL.PLLM = 5;
 290:main.cpp      ****   RCC_OscInitStruct.PLL.PLLN = 160;
 291:main.cpp      ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 292:main.cpp      ****   RCC_OscInitStruct.PLL.PLLP = 2;
 293:main.cpp      ****   RCC_OscInitStruct.PLL.PLLR = 2;
 294:main.cpp      ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 295:main.cpp      **** 
 296:main.cpp      ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 297:main.cpp      ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
 298:main.cpp      ****   ret = HAL_RCC_OscConfig(&RCC_OscInitStruct);
 299:main.cpp      ****   if(ret != HAL_OK)
 300:main.cpp      ****   {
 301:main.cpp      ****     Error_Handler();
 302:main.cpp      ****   }
 303:main.cpp      **** 
 304:main.cpp      ****   /* Select PLL as system clock source and configure  bus clocks dividers */
 305:main.cpp      ****   RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 
 306:main.cpp      ****                                  RCC_CLOCKTYPE_PCLK2  | RCC_CLOCKTYPE_D3PCLK1);
 307:main.cpp      **** 
 308:main.cpp      ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 309:main.cpp      ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 310:main.cpp      ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 311:main.cpp      ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 312:main.cpp      ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 313:main.cpp      ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 12


 314:main.cpp      ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 315:main.cpp      ****   ret = HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4);
 316:main.cpp      ****   if(ret != HAL_OK)
 317:main.cpp      ****   {
 318:main.cpp      ****     Error_Handler();
 319:main.cpp      ****   }
 320:main.cpp      **** }
 321:main.cpp      **** 
 322:main.cpp      **** 
 323:main.cpp      **** /**
 324:main.cpp      **** * @brief  CPU L1-Cache enable.
 325:main.cpp      **** * @param  None
 326:main.cpp      **** * @retval None
 327:main.cpp      **** */
 328:main.cpp      **** static void CPU_CACHE_Enable(void)
 246              		.loc 1 328 13 view .LVU86
 247              	.LBE74:
 329:main.cpp      **** {
 330:main.cpp      ****   /* Enable I-Cache */
 331:main.cpp      ****   SCB_EnableICache();
 248              		.loc 1 331 3 view .LVU87
 249              	.LBB103:
 250              	.LBB75:
 251              	.LBI75:
 252              		.file 2 "../Drivers/CMSIS/Include/core_cm7.h"
   1:../Drivers/CMSIS/Include/core_cm7.h **** /**************************************************************************//**
   2:../Drivers/CMSIS/Include/core_cm7.h ****  * @file     core_cm7.h
   3:../Drivers/CMSIS/Include/core_cm7.h ****  * @brief    CMSIS Cortex-M7 Core Peripheral Access Layer Header File
   4:../Drivers/CMSIS/Include/core_cm7.h ****  * @version  V5.0.1
   5:../Drivers/CMSIS/Include/core_cm7.h ****  * @date     25. November 2016
   6:../Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
   7:../Drivers/CMSIS/Include/core_cm7.h **** /*
   8:../Drivers/CMSIS/Include/core_cm7.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:../Drivers/CMSIS/Include/core_cm7.h ****  *
  10:../Drivers/CMSIS/Include/core_cm7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../Drivers/CMSIS/Include/core_cm7.h ****  *
  12:../Drivers/CMSIS/Include/core_cm7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../Drivers/CMSIS/Include/core_cm7.h ****  * not use this file except in compliance with the License.
  14:../Drivers/CMSIS/Include/core_cm7.h ****  * You may obtain a copy of the License at
  15:../Drivers/CMSIS/Include/core_cm7.h ****  *
  16:../Drivers/CMSIS/Include/core_cm7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../Drivers/CMSIS/Include/core_cm7.h ****  *
  18:../Drivers/CMSIS/Include/core_cm7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../Drivers/CMSIS/Include/core_cm7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../Drivers/CMSIS/Include/core_cm7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../Drivers/CMSIS/Include/core_cm7.h ****  * See the License for the specific language governing permissions and
  22:../Drivers/CMSIS/Include/core_cm7.h ****  * limitations under the License.
  23:../Drivers/CMSIS/Include/core_cm7.h ****  */
  24:../Drivers/CMSIS/Include/core_cm7.h **** 
  25:../Drivers/CMSIS/Include/core_cm7.h **** #if   defined ( __ICCARM__ )
  26:../Drivers/CMSIS/Include/core_cm7.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  27:../Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  28:../Drivers/CMSIS/Include/core_cm7.h ****   #pragma clang system_header   /* treat file as system include file */
  29:../Drivers/CMSIS/Include/core_cm7.h **** #endif
  30:../Drivers/CMSIS/Include/core_cm7.h **** 
  31:../Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  32:../Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 13


  33:../Drivers/CMSIS/Include/core_cm7.h **** 
  34:../Drivers/CMSIS/Include/core_cm7.h **** #include <stdint.h>
  35:../Drivers/CMSIS/Include/core_cm7.h **** 
  36:../Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
  37:../Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
  38:../Drivers/CMSIS/Include/core_cm7.h **** #endif
  39:../Drivers/CMSIS/Include/core_cm7.h **** 
  40:../Drivers/CMSIS/Include/core_cm7.h **** /**
  41:../Drivers/CMSIS/Include/core_cm7.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:../Drivers/CMSIS/Include/core_cm7.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:../Drivers/CMSIS/Include/core_cm7.h **** 
  44:../Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:../Drivers/CMSIS/Include/core_cm7.h ****      Function definitions in header files are used to allow 'inlining'.
  46:../Drivers/CMSIS/Include/core_cm7.h **** 
  47:../Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:../Drivers/CMSIS/Include/core_cm7.h ****      Unions are used for effective representation of core registers.
  49:../Drivers/CMSIS/Include/core_cm7.h **** 
  50:../Drivers/CMSIS/Include/core_cm7.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:../Drivers/CMSIS/Include/core_cm7.h ****      Function-like macros are used to allow more efficient code.
  52:../Drivers/CMSIS/Include/core_cm7.h ****  */
  53:../Drivers/CMSIS/Include/core_cm7.h **** 
  54:../Drivers/CMSIS/Include/core_cm7.h **** 
  55:../Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
  56:../Drivers/CMSIS/Include/core_cm7.h ****  *                 CMSIS definitions
  57:../Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
  58:../Drivers/CMSIS/Include/core_cm7.h **** /**
  59:../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup Cortex_M7
  60:../Drivers/CMSIS/Include/core_cm7.h ****   @{
  61:../Drivers/CMSIS/Include/core_cm7.h ****  */
  62:../Drivers/CMSIS/Include/core_cm7.h **** 
  63:../Drivers/CMSIS/Include/core_cm7.h **** /*  CMSIS CM7 definitions */
  64:../Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN  ( 5U)                                      /*!< [31:16] CMSIS HAL
  65:../Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB   ( 0U)                                      /*!< [15:0]  CMSIS HAL
  66:../Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION       ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  67:../Drivers/CMSIS/Include/core_cm7.h ****                                     __CM7_CMSIS_VERSION_SUB           )      /*!< CMSIS HAL version
  68:../Drivers/CMSIS/Include/core_cm7.h **** 
  69:../Drivers/CMSIS/Include/core_cm7.h **** #define __CORTEX_M                (7U)                                       /*!< Cortex-M Core */
  70:../Drivers/CMSIS/Include/core_cm7.h **** 
  71:../Drivers/CMSIS/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
  72:../Drivers/CMSIS/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  73:../Drivers/CMSIS/Include/core_cm7.h **** */
  74:../Drivers/CMSIS/Include/core_cm7.h **** #if defined ( __CC_ARM )
  75:../Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TARGET_FPU_VFP
  76:../Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  77:../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  78:../Drivers/CMSIS/Include/core_cm7.h ****     #else
  79:../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  80:../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  81:../Drivers/CMSIS/Include/core_cm7.h ****     #endif
  82:../Drivers/CMSIS/Include/core_cm7.h ****   #else
  83:../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  84:../Drivers/CMSIS/Include/core_cm7.h ****   #endif
  85:../Drivers/CMSIS/Include/core_cm7.h **** 
  86:../Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  87:../Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARM_PCS_VFP
  88:../Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  89:../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 14


  90:../Drivers/CMSIS/Include/core_cm7.h ****     #else
  91:../Drivers/CMSIS/Include/core_cm7.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  92:../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  93:../Drivers/CMSIS/Include/core_cm7.h ****     #endif
  94:../Drivers/CMSIS/Include/core_cm7.h ****   #else
  95:../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  96:../Drivers/CMSIS/Include/core_cm7.h ****   #endif
  97:../Drivers/CMSIS/Include/core_cm7.h **** 
  98:../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __GNUC__ )
  99:../Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 100:../Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 101:../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 102:../Drivers/CMSIS/Include/core_cm7.h ****     #else
 103:../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 104:../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 105:../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 106:../Drivers/CMSIS/Include/core_cm7.h ****   #else
 107:../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 108:../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 109:../Drivers/CMSIS/Include/core_cm7.h **** 
 110:../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
 111:../Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARMVFP__
 112:../Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 113:../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 114:../Drivers/CMSIS/Include/core_cm7.h ****     #else
 115:../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 116:../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 117:../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 118:../Drivers/CMSIS/Include/core_cm7.h ****   #else
 119:../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 120:../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 121:../Drivers/CMSIS/Include/core_cm7.h **** 
 122:../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TI_ARM__ )
 123:../Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TI_VFP_SUPPORT__
 124:../Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 125:../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 126:../Drivers/CMSIS/Include/core_cm7.h ****     #else
 127:../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 128:../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 129:../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 130:../Drivers/CMSIS/Include/core_cm7.h ****   #else
 131:../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 132:../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 133:../Drivers/CMSIS/Include/core_cm7.h **** 
 134:../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 135:../Drivers/CMSIS/Include/core_cm7.h ****   #if defined __FPU_VFP__
 136:../Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 137:../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 138:../Drivers/CMSIS/Include/core_cm7.h ****     #else
 139:../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 140:../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 141:../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 142:../Drivers/CMSIS/Include/core_cm7.h ****   #else
 143:../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 144:../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 145:../Drivers/CMSIS/Include/core_cm7.h **** 
 146:../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __CSMC__ )
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 15


 147:../Drivers/CMSIS/Include/core_cm7.h ****   #if ( __CSMC__ & 0x400U)
 148:../Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 149:../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 150:../Drivers/CMSIS/Include/core_cm7.h ****     #else
 151:../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 152:../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 153:../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 154:../Drivers/CMSIS/Include/core_cm7.h ****   #else
 155:../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 156:../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 157:../Drivers/CMSIS/Include/core_cm7.h **** 
 158:../Drivers/CMSIS/Include/core_cm7.h **** #endif
 159:../Drivers/CMSIS/Include/core_cm7.h **** 
 160:../Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 161:../Drivers/CMSIS/Include/core_cm7.h **** 
 162:../Drivers/CMSIS/Include/core_cm7.h **** 
 163:../Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 164:../Drivers/CMSIS/Include/core_cm7.h **** }
 165:../Drivers/CMSIS/Include/core_cm7.h **** #endif
 166:../Drivers/CMSIS/Include/core_cm7.h **** 
 167:../Drivers/CMSIS/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 168:../Drivers/CMSIS/Include/core_cm7.h **** 
 169:../Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 170:../Drivers/CMSIS/Include/core_cm7.h **** 
 171:../Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 172:../Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 173:../Drivers/CMSIS/Include/core_cm7.h **** 
 174:../Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 175:../Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
 176:../Drivers/CMSIS/Include/core_cm7.h **** #endif
 177:../Drivers/CMSIS/Include/core_cm7.h **** 
 178:../Drivers/CMSIS/Include/core_cm7.h **** /* check device defines and use defaults */
 179:../Drivers/CMSIS/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 180:../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __CM7_REV
 181:../Drivers/CMSIS/Include/core_cm7.h ****     #define __CM7_REV               0x0000U
 182:../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__CM7_REV not defined in device header file; using default!"
 183:../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 184:../Drivers/CMSIS/Include/core_cm7.h **** 
 185:../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __FPU_PRESENT
 186:../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_PRESENT             0U
 187:../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 188:../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 189:../Drivers/CMSIS/Include/core_cm7.h **** 
 190:../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __MPU_PRESENT
 191:../Drivers/CMSIS/Include/core_cm7.h ****     #define __MPU_PRESENT             0U
 192:../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 193:../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 194:../Drivers/CMSIS/Include/core_cm7.h **** 
 195:../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __ICACHE_PRESENT
 196:../Drivers/CMSIS/Include/core_cm7.h ****     #define __ICACHE_PRESENT          0U
 197:../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 198:../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 199:../Drivers/CMSIS/Include/core_cm7.h **** 
 200:../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DCACHE_PRESENT
 201:../Drivers/CMSIS/Include/core_cm7.h ****     #define __DCACHE_PRESENT          0U
 202:../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 203:../Drivers/CMSIS/Include/core_cm7.h ****   #endif
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 16


 204:../Drivers/CMSIS/Include/core_cm7.h **** 
 205:../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DTCM_PRESENT
 206:../Drivers/CMSIS/Include/core_cm7.h ****     #define __DTCM_PRESENT            0U
 207:../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 208:../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 209:../Drivers/CMSIS/Include/core_cm7.h **** 
 210:../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __NVIC_PRIO_BITS
 211:../Drivers/CMSIS/Include/core_cm7.h ****     #define __NVIC_PRIO_BITS          3U
 212:../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 213:../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 214:../Drivers/CMSIS/Include/core_cm7.h **** 
 215:../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __Vendor_SysTickConfig
 216:../Drivers/CMSIS/Include/core_cm7.h ****     #define __Vendor_SysTickConfig    0U
 217:../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 218:../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 219:../Drivers/CMSIS/Include/core_cm7.h **** #endif
 220:../Drivers/CMSIS/Include/core_cm7.h **** 
 221:../Drivers/CMSIS/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
 222:../Drivers/CMSIS/Include/core_cm7.h **** /**
 223:../Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 224:../Drivers/CMSIS/Include/core_cm7.h **** 
 225:../Drivers/CMSIS/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 226:../Drivers/CMSIS/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 227:../Drivers/CMSIS/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 228:../Drivers/CMSIS/Include/core_cm7.h **** */
 229:../Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 230:../Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 231:../Drivers/CMSIS/Include/core_cm7.h **** #else
 232:../Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 233:../Drivers/CMSIS/Include/core_cm7.h **** #endif
 234:../Drivers/CMSIS/Include/core_cm7.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 235:../Drivers/CMSIS/Include/core_cm7.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 236:../Drivers/CMSIS/Include/core_cm7.h **** 
 237:../Drivers/CMSIS/Include/core_cm7.h **** /* following defines should be used for structure members */
 238:../Drivers/CMSIS/Include/core_cm7.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 239:../Drivers/CMSIS/Include/core_cm7.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 240:../Drivers/CMSIS/Include/core_cm7.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 241:../Drivers/CMSIS/Include/core_cm7.h **** 
 242:../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group Cortex_M7 */
 243:../Drivers/CMSIS/Include/core_cm7.h **** 
 244:../Drivers/CMSIS/Include/core_cm7.h **** 
 245:../Drivers/CMSIS/Include/core_cm7.h **** 
 246:../Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
 247:../Drivers/CMSIS/Include/core_cm7.h ****  *                 Register Abstraction
 248:../Drivers/CMSIS/Include/core_cm7.h ****   Core Register contain:
 249:../Drivers/CMSIS/Include/core_cm7.h ****   - Core Register
 250:../Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Register
 251:../Drivers/CMSIS/Include/core_cm7.h ****   - Core SCB Register
 252:../Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Register
 253:../Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Register
 254:../Drivers/CMSIS/Include/core_cm7.h ****   - Core MPU Register
 255:../Drivers/CMSIS/Include/core_cm7.h ****   - Core FPU Register
 256:../Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
 257:../Drivers/CMSIS/Include/core_cm7.h **** /**
 258:../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 259:../Drivers/CMSIS/Include/core_cm7.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 260:../Drivers/CMSIS/Include/core_cm7.h **** */
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 17


 261:../Drivers/CMSIS/Include/core_cm7.h **** 
 262:../Drivers/CMSIS/Include/core_cm7.h **** /**
 263:../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 264:../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 265:../Drivers/CMSIS/Include/core_cm7.h ****   \brief      Core Register type definitions.
 266:../Drivers/CMSIS/Include/core_cm7.h ****   @{
 267:../Drivers/CMSIS/Include/core_cm7.h ****  */
 268:../Drivers/CMSIS/Include/core_cm7.h **** 
 269:../Drivers/CMSIS/Include/core_cm7.h **** /**
 270:../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 271:../Drivers/CMSIS/Include/core_cm7.h ****  */
 272:../Drivers/CMSIS/Include/core_cm7.h **** typedef union
 273:../Drivers/CMSIS/Include/core_cm7.h **** {
 274:../Drivers/CMSIS/Include/core_cm7.h ****   struct
 275:../Drivers/CMSIS/Include/core_cm7.h ****   {
 276:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 277:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 278:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 279:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 280:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 281:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 282:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 283:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 284:../Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 285:../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 286:../Drivers/CMSIS/Include/core_cm7.h **** } APSR_Type;
 287:../Drivers/CMSIS/Include/core_cm7.h **** 
 288:../Drivers/CMSIS/Include/core_cm7.h **** /* APSR Register Definitions */
 289:../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 290:../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 291:../Drivers/CMSIS/Include/core_cm7.h **** 
 292:../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 293:../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 294:../Drivers/CMSIS/Include/core_cm7.h **** 
 295:../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 296:../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 297:../Drivers/CMSIS/Include/core_cm7.h **** 
 298:../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 299:../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 300:../Drivers/CMSIS/Include/core_cm7.h **** 
 301:../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 302:../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 303:../Drivers/CMSIS/Include/core_cm7.h **** 
 304:../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 305:../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 306:../Drivers/CMSIS/Include/core_cm7.h **** 
 307:../Drivers/CMSIS/Include/core_cm7.h **** 
 308:../Drivers/CMSIS/Include/core_cm7.h **** /**
 309:../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 310:../Drivers/CMSIS/Include/core_cm7.h ****  */
 311:../Drivers/CMSIS/Include/core_cm7.h **** typedef union
 312:../Drivers/CMSIS/Include/core_cm7.h **** {
 313:../Drivers/CMSIS/Include/core_cm7.h ****   struct
 314:../Drivers/CMSIS/Include/core_cm7.h ****   {
 315:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 316:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 317:../Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 18


 318:../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 319:../Drivers/CMSIS/Include/core_cm7.h **** } IPSR_Type;
 320:../Drivers/CMSIS/Include/core_cm7.h **** 
 321:../Drivers/CMSIS/Include/core_cm7.h **** /* IPSR Register Definitions */
 322:../Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 323:../Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 324:../Drivers/CMSIS/Include/core_cm7.h **** 
 325:../Drivers/CMSIS/Include/core_cm7.h **** 
 326:../Drivers/CMSIS/Include/core_cm7.h **** /**
 327:../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 328:../Drivers/CMSIS/Include/core_cm7.h ****  */
 329:../Drivers/CMSIS/Include/core_cm7.h **** typedef union
 330:../Drivers/CMSIS/Include/core_cm7.h **** {
 331:../Drivers/CMSIS/Include/core_cm7.h ****   struct
 332:../Drivers/CMSIS/Include/core_cm7.h ****   {
 333:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 334:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 335:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 336:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 337:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 338:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 339:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 340:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 341:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 342:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 343:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 344:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 345:../Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 346:../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 347:../Drivers/CMSIS/Include/core_cm7.h **** } xPSR_Type;
 348:../Drivers/CMSIS/Include/core_cm7.h **** 
 349:../Drivers/CMSIS/Include/core_cm7.h **** /* xPSR Register Definitions */
 350:../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 351:../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 352:../Drivers/CMSIS/Include/core_cm7.h **** 
 353:../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 354:../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 355:../Drivers/CMSIS/Include/core_cm7.h **** 
 356:../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 357:../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 358:../Drivers/CMSIS/Include/core_cm7.h **** 
 359:../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 360:../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 361:../Drivers/CMSIS/Include/core_cm7.h **** 
 362:../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 363:../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 364:../Drivers/CMSIS/Include/core_cm7.h **** 
 365:../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 366:../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 367:../Drivers/CMSIS/Include/core_cm7.h **** 
 368:../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 369:../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 370:../Drivers/CMSIS/Include/core_cm7.h **** 
 371:../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 372:../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 373:../Drivers/CMSIS/Include/core_cm7.h **** 
 374:../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 19


 375:../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 376:../Drivers/CMSIS/Include/core_cm7.h **** 
 377:../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 378:../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 379:../Drivers/CMSIS/Include/core_cm7.h **** 
 380:../Drivers/CMSIS/Include/core_cm7.h **** 
 381:../Drivers/CMSIS/Include/core_cm7.h **** /**
 382:../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Control Registers (CONTROL).
 383:../Drivers/CMSIS/Include/core_cm7.h ****  */
 384:../Drivers/CMSIS/Include/core_cm7.h **** typedef union
 385:../Drivers/CMSIS/Include/core_cm7.h **** {
 386:../Drivers/CMSIS/Include/core_cm7.h ****   struct
 387:../Drivers/CMSIS/Include/core_cm7.h ****   {
 388:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 389:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 390:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 391:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 392:../Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 393:../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 394:../Drivers/CMSIS/Include/core_cm7.h **** } CONTROL_Type;
 395:../Drivers/CMSIS/Include/core_cm7.h **** 
 396:../Drivers/CMSIS/Include/core_cm7.h **** /* CONTROL Register Definitions */
 397:../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 398:../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 399:../Drivers/CMSIS/Include/core_cm7.h **** 
 400:../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 401:../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 402:../Drivers/CMSIS/Include/core_cm7.h **** 
 403:../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 404:../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 405:../Drivers/CMSIS/Include/core_cm7.h **** 
 406:../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CORE */
 407:../Drivers/CMSIS/Include/core_cm7.h **** 
 408:../Drivers/CMSIS/Include/core_cm7.h **** 
 409:../Drivers/CMSIS/Include/core_cm7.h **** /**
 410:../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 411:../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 412:../Drivers/CMSIS/Include/core_cm7.h ****   \brief      Type definitions for the NVIC Registers
 413:../Drivers/CMSIS/Include/core_cm7.h ****   @{
 414:../Drivers/CMSIS/Include/core_cm7.h ****  */
 415:../Drivers/CMSIS/Include/core_cm7.h **** 
 416:../Drivers/CMSIS/Include/core_cm7.h **** /**
 417:../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 418:../Drivers/CMSIS/Include/core_cm7.h ****  */
 419:../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 420:../Drivers/CMSIS/Include/core_cm7.h **** {
 421:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 422:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[24U];
 423:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 424:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RSERVED1[24U];
 425:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 426:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[24U];
 427:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 428:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[24U];
 429:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 430:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[56U];
 431:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 20


 432:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[644U];
 433:../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 434:../Drivers/CMSIS/Include/core_cm7.h **** }  NVIC_Type;
 435:../Drivers/CMSIS/Include/core_cm7.h **** 
 436:../Drivers/CMSIS/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 437:../Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 438:../Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 439:../Drivers/CMSIS/Include/core_cm7.h **** 
 440:../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_NVIC */
 441:../Drivers/CMSIS/Include/core_cm7.h **** 
 442:../Drivers/CMSIS/Include/core_cm7.h **** 
 443:../Drivers/CMSIS/Include/core_cm7.h **** /**
 444:../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 445:../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 446:../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control Block Registers
 447:../Drivers/CMSIS/Include/core_cm7.h ****   @{
 448:../Drivers/CMSIS/Include/core_cm7.h ****  */
 449:../Drivers/CMSIS/Include/core_cm7.h **** 
 450:../Drivers/CMSIS/Include/core_cm7.h **** /**
 451:../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control Block (SCB).
 452:../Drivers/CMSIS/Include/core_cm7.h ****  */
 453:../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 454:../Drivers/CMSIS/Include/core_cm7.h **** {
 455:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 456:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 457:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 458:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 459:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 460:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 461:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 462:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 463:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 464:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 465:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 466:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 467:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 468:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 469:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 470:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 471:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_AFR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 472:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_MFR[4U];             /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 473:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_ISAR[5U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 474:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 475:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 476:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 477:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 478:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 479:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 480:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[93U];
 481:../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 482:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[15U];
 483:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 484:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
 485:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 1
 486:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[1U];
 487:../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 488:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED6[1U];
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 21


 489:../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
 490:../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 491:../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 492:../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 493:../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 494:../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 495:../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 496:../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
 497:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[6U];
 498:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCMCR;                 /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memo
 499:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DTCMCR;                 /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Cont
 500:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBPCR;                 /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 501:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CACR;                   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 502:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBSCR;                 /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 503:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED8[1U];
 504:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ABFSR;                  /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Regis
 505:../Drivers/CMSIS/Include/core_cm7.h **** } SCB_Type;
 506:../Drivers/CMSIS/Include/core_cm7.h **** 
 507:../Drivers/CMSIS/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 508:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 509:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 510:../Drivers/CMSIS/Include/core_cm7.h **** 
 511:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 512:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 513:../Drivers/CMSIS/Include/core_cm7.h **** 
 514:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 515:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 516:../Drivers/CMSIS/Include/core_cm7.h **** 
 517:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 518:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 519:../Drivers/CMSIS/Include/core_cm7.h **** 
 520:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 521:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 522:../Drivers/CMSIS/Include/core_cm7.h **** 
 523:../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 524:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 525:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 526:../Drivers/CMSIS/Include/core_cm7.h **** 
 527:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 528:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 529:../Drivers/CMSIS/Include/core_cm7.h **** 
 530:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 531:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 532:../Drivers/CMSIS/Include/core_cm7.h **** 
 533:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 534:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 535:../Drivers/CMSIS/Include/core_cm7.h **** 
 536:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 537:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 538:../Drivers/CMSIS/Include/core_cm7.h **** 
 539:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 540:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 541:../Drivers/CMSIS/Include/core_cm7.h **** 
 542:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 543:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 544:../Drivers/CMSIS/Include/core_cm7.h **** 
 545:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 22


 546:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 547:../Drivers/CMSIS/Include/core_cm7.h **** 
 548:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 549:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 550:../Drivers/CMSIS/Include/core_cm7.h **** 
 551:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 552:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 553:../Drivers/CMSIS/Include/core_cm7.h **** 
 554:../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
 555:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 556:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 557:../Drivers/CMSIS/Include/core_cm7.h **** 
 558:../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 559:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 560:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 561:../Drivers/CMSIS/Include/core_cm7.h **** 
 562:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 563:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 564:../Drivers/CMSIS/Include/core_cm7.h **** 
 565:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 566:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 567:../Drivers/CMSIS/Include/core_cm7.h **** 
 568:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 569:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 570:../Drivers/CMSIS/Include/core_cm7.h **** 
 571:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 572:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 573:../Drivers/CMSIS/Include/core_cm7.h **** 
 574:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 575:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 576:../Drivers/CMSIS/Include/core_cm7.h **** 
 577:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 578:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 579:../Drivers/CMSIS/Include/core_cm7.h **** 
 580:../Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 581:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 582:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 583:../Drivers/CMSIS/Include/core_cm7.h **** 
 584:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 585:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 586:../Drivers/CMSIS/Include/core_cm7.h **** 
 587:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 588:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 589:../Drivers/CMSIS/Include/core_cm7.h **** 
 590:../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 591:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Pos                      18U                                           /*!< SCB 
 592:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 593:../Drivers/CMSIS/Include/core_cm7.h **** 
 594:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Pos                      17U                                           /*!< SCB 
 595:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 596:../Drivers/CMSIS/Include/core_cm7.h **** 
 597:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Pos                      16U                                           /*!< SCB 
 598:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 599:../Drivers/CMSIS/Include/core_cm7.h **** 
 600:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 601:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 602:../Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 23


 603:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 604:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 605:../Drivers/CMSIS/Include/core_cm7.h **** 
 606:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 607:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 608:../Drivers/CMSIS/Include/core_cm7.h **** 
 609:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 610:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 611:../Drivers/CMSIS/Include/core_cm7.h **** 
 612:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 613:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 614:../Drivers/CMSIS/Include/core_cm7.h **** 
 615:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 616:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 617:../Drivers/CMSIS/Include/core_cm7.h **** 
 618:../Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
 619:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 620:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 621:../Drivers/CMSIS/Include/core_cm7.h **** 
 622:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 623:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 624:../Drivers/CMSIS/Include/core_cm7.h **** 
 625:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 626:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 627:../Drivers/CMSIS/Include/core_cm7.h **** 
 628:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 629:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 630:../Drivers/CMSIS/Include/core_cm7.h **** 
 631:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 632:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 633:../Drivers/CMSIS/Include/core_cm7.h **** 
 634:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 635:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 636:../Drivers/CMSIS/Include/core_cm7.h **** 
 637:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 638:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 639:../Drivers/CMSIS/Include/core_cm7.h **** 
 640:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 641:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 642:../Drivers/CMSIS/Include/core_cm7.h **** 
 643:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 644:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 645:../Drivers/CMSIS/Include/core_cm7.h **** 
 646:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 647:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 648:../Drivers/CMSIS/Include/core_cm7.h **** 
 649:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 650:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 651:../Drivers/CMSIS/Include/core_cm7.h **** 
 652:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 653:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 654:../Drivers/CMSIS/Include/core_cm7.h **** 
 655:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 656:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 657:../Drivers/CMSIS/Include/core_cm7.h **** 
 658:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 659:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 24


 660:../Drivers/CMSIS/Include/core_cm7.h **** 
 661:../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 662:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 663:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 664:../Drivers/CMSIS/Include/core_cm7.h **** 
 665:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 666:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 667:../Drivers/CMSIS/Include/core_cm7.h **** 
 668:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 669:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 670:../Drivers/CMSIS/Include/core_cm7.h **** 
 671:../Drivers/CMSIS/Include/core_cm7.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 672:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 673:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 674:../Drivers/CMSIS/Include/core_cm7.h **** 
 675:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 676:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 677:../Drivers/CMSIS/Include/core_cm7.h **** 
 678:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 679:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 680:../Drivers/CMSIS/Include/core_cm7.h **** 
 681:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 682:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 683:../Drivers/CMSIS/Include/core_cm7.h **** 
 684:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 685:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 686:../Drivers/CMSIS/Include/core_cm7.h **** 
 687:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 688:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 689:../Drivers/CMSIS/Include/core_cm7.h **** 
 690:../Drivers/CMSIS/Include/core_cm7.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 691:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 692:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 693:../Drivers/CMSIS/Include/core_cm7.h **** 
 694:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 695:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 696:../Drivers/CMSIS/Include/core_cm7.h **** 
 697:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 698:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 699:../Drivers/CMSIS/Include/core_cm7.h **** 
 700:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 701:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 702:../Drivers/CMSIS/Include/core_cm7.h **** 
 703:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 704:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 705:../Drivers/CMSIS/Include/core_cm7.h **** 
 706:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 707:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 708:../Drivers/CMSIS/Include/core_cm7.h **** 
 709:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 710:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 711:../Drivers/CMSIS/Include/core_cm7.h **** 
 712:../Drivers/CMSIS/Include/core_cm7.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 713:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 714:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 715:../Drivers/CMSIS/Include/core_cm7.h **** 
 716:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 25


 717:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 718:../Drivers/CMSIS/Include/core_cm7.h **** 
 719:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 720:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 721:../Drivers/CMSIS/Include/core_cm7.h **** 
 722:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 723:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 724:../Drivers/CMSIS/Include/core_cm7.h **** 
 725:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 726:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 727:../Drivers/CMSIS/Include/core_cm7.h **** 
 728:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 729:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 730:../Drivers/CMSIS/Include/core_cm7.h **** 
 731:../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 732:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 733:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 734:../Drivers/CMSIS/Include/core_cm7.h **** 
 735:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 736:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 737:../Drivers/CMSIS/Include/core_cm7.h **** 
 738:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 739:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 740:../Drivers/CMSIS/Include/core_cm7.h **** 
 741:../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 742:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 743:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 744:../Drivers/CMSIS/Include/core_cm7.h **** 
 745:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 746:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 747:../Drivers/CMSIS/Include/core_cm7.h **** 
 748:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 749:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 750:../Drivers/CMSIS/Include/core_cm7.h **** 
 751:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 752:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 753:../Drivers/CMSIS/Include/core_cm7.h **** 
 754:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 755:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 756:../Drivers/CMSIS/Include/core_cm7.h **** 
 757:../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 758:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
 759:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 760:../Drivers/CMSIS/Include/core_cm7.h **** 
 761:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 762:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 763:../Drivers/CMSIS/Include/core_cm7.h **** 
 764:../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 765:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 766:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 767:../Drivers/CMSIS/Include/core_cm7.h **** 
 768:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 769:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
 770:../Drivers/CMSIS/Include/core_cm7.h **** 
 771:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
 772:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 773:../Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 26


 774:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
 775:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 776:../Drivers/CMSIS/Include/core_cm7.h **** 
 777:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 778:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 779:../Drivers/CMSIS/Include/core_cm7.h **** 
 780:../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 781:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
 782:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 783:../Drivers/CMSIS/Include/core_cm7.h **** 
 784:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 785:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
 786:../Drivers/CMSIS/Include/core_cm7.h **** 
 787:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
 788:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 789:../Drivers/CMSIS/Include/core_cm7.h **** 
 790:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 791:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
 792:../Drivers/CMSIS/Include/core_cm7.h **** 
 793:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 794:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 795:../Drivers/CMSIS/Include/core_cm7.h **** 
 796:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 797:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 798:../Drivers/CMSIS/Include/core_cm7.h **** 
 799:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 800:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 801:../Drivers/CMSIS/Include/core_cm7.h **** 
 802:../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 803:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
 804:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 805:../Drivers/CMSIS/Include/core_cm7.h **** 
 806:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 807:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 808:../Drivers/CMSIS/Include/core_cm7.h **** 
 809:../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 810:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 811:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 812:../Drivers/CMSIS/Include/core_cm7.h **** 
 813:../Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 814:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 815:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
 816:../Drivers/CMSIS/Include/core_cm7.h **** 
 817:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 818:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 819:../Drivers/CMSIS/Include/core_cm7.h **** 
 820:../Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 821:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 822:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 823:../Drivers/CMSIS/Include/core_cm7.h **** 
 824:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
 825:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 826:../Drivers/CMSIS/Include/core_cm7.h **** 
 827:../Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 828:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
 829:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 830:../Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 27


 831:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
 832:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 833:../Drivers/CMSIS/Include/core_cm7.h **** 
 834:../Drivers/CMSIS/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 835:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos                   3U                                            /*!< SCB 
 836:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk                  (0xFUL << SCB_ITCMCR_SZ_Pos)                   /*!< SCB 
 837:../Drivers/CMSIS/Include/core_cm7.h **** 
 838:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos                2U                                            /*!< SCB 
 839:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk               (1UL << SCB_ITCMCR_RETEN_Pos)                  /*!< SCB 
 840:../Drivers/CMSIS/Include/core_cm7.h **** 
 841:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos                  1U                                            /*!< SCB 
 842:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk                 (1UL << SCB_ITCMCR_RMW_Pos)                    /*!< SCB 
 843:../Drivers/CMSIS/Include/core_cm7.h **** 
 844:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos                   0U                                            /*!< SCB 
 845:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk                  (1UL /*<< SCB_ITCMCR_EN_Pos*/)                 /*!< SCB 
 846:../Drivers/CMSIS/Include/core_cm7.h **** 
 847:../Drivers/CMSIS/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 848:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos                   3U                                            /*!< SCB 
 849:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk                  (0xFUL << SCB_DTCMCR_SZ_Pos)                   /*!< SCB 
 850:../Drivers/CMSIS/Include/core_cm7.h **** 
 851:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos                2U                                            /*!< SCB 
 852:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk               (1UL << SCB_DTCMCR_RETEN_Pos)                   /*!< SCB
 853:../Drivers/CMSIS/Include/core_cm7.h **** 
 854:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos                  1U                                            /*!< SCB 
 855:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk                 (1UL << SCB_DTCMCR_RMW_Pos)                    /*!< SCB 
 856:../Drivers/CMSIS/Include/core_cm7.h **** 
 857:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos                   0U                                            /*!< SCB 
 858:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk                  (1UL /*<< SCB_DTCMCR_EN_Pos*/)                 /*!< SCB 
 859:../Drivers/CMSIS/Include/core_cm7.h **** 
 860:../Drivers/CMSIS/Include/core_cm7.h **** /* AHBP Control Register Definitions */
 861:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos                   1U                                            /*!< SCB 
 862:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk                  (7UL << SCB_AHBPCR_SZ_Pos)                     /*!< SCB 
 863:../Drivers/CMSIS/Include/core_cm7.h **** 
 864:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos                   0U                                            /*!< SCB 
 865:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk                  (1UL /*<< SCB_AHBPCR_EN_Pos*/)                 /*!< SCB 
 866:../Drivers/CMSIS/Include/core_cm7.h **** 
 867:../Drivers/CMSIS/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 868:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos                2U                                            /*!< SCB 
 869:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk               (1UL << SCB_CACR_FORCEWT_Pos)                  /*!< SCB 
 870:../Drivers/CMSIS/Include/core_cm7.h **** 
 871:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos                  1U                                            /*!< SCB 
 872:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk                 (1UL << SCB_CACR_ECCEN_Pos)                    /*!< SCB 
 873:../Drivers/CMSIS/Include/core_cm7.h **** 
 874:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos                   0U                                            /*!< SCB 
 875:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk                  (1UL /*<< SCB_CACR_SIWT_Pos*/)                 /*!< SCB 
 876:../Drivers/CMSIS/Include/core_cm7.h **** 
 877:../Drivers/CMSIS/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 878:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos           11U                                            /*!< SCB 
 879:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk           (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)           /*!< SCB 
 880:../Drivers/CMSIS/Include/core_cm7.h **** 
 881:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos                 2U                                            /*!< SCB 
 882:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk                (0x1FFUL << SCB_AHBPCR_TPRI_Pos)               /*!< SCB 
 883:../Drivers/CMSIS/Include/core_cm7.h **** 
 884:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos                  0U                                            /*!< SCB 
 885:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk                 (3UL /*<< SCB_AHBPCR_CTL_Pos*/)                /*!< SCB 
 886:../Drivers/CMSIS/Include/core_cm7.h **** 
 887:../Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 28


 888:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos              8U                                            /*!< SCB 
 889:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk             (3UL << SCB_ABFSR_AXIMTYPE_Pos)                /*!< SCB 
 890:../Drivers/CMSIS/Include/core_cm7.h **** 
 891:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos                  4U                                            /*!< SCB 
 892:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk                 (1UL << SCB_ABFSR_EPPB_Pos)                    /*!< SCB 
 893:../Drivers/CMSIS/Include/core_cm7.h **** 
 894:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos                  3U                                            /*!< SCB 
 895:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk                 (1UL << SCB_ABFSR_AXIM_Pos)                    /*!< SCB 
 896:../Drivers/CMSIS/Include/core_cm7.h **** 
 897:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos                  2U                                            /*!< SCB 
 898:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk                 (1UL << SCB_ABFSR_AHBP_Pos)                    /*!< SCB 
 899:../Drivers/CMSIS/Include/core_cm7.h **** 
 900:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos                  1U                                            /*!< SCB 
 901:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk                 (1UL << SCB_ABFSR_DTCM_Pos)                    /*!< SCB 
 902:../Drivers/CMSIS/Include/core_cm7.h **** 
 903:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos                  0U                                            /*!< SCB 
 904:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk                 (1UL /*<< SCB_ABFSR_ITCM_Pos*/)                /*!< SCB 
 905:../Drivers/CMSIS/Include/core_cm7.h **** 
 906:../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCB */
 907:../Drivers/CMSIS/Include/core_cm7.h **** 
 908:../Drivers/CMSIS/Include/core_cm7.h **** 
 909:../Drivers/CMSIS/Include/core_cm7.h **** /**
 910:../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 911:../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 912:../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 913:../Drivers/CMSIS/Include/core_cm7.h ****   @{
 914:../Drivers/CMSIS/Include/core_cm7.h ****  */
 915:../Drivers/CMSIS/Include/core_cm7.h **** 
 916:../Drivers/CMSIS/Include/core_cm7.h **** /**
 917:../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 918:../Drivers/CMSIS/Include/core_cm7.h ****  */
 919:../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 920:../Drivers/CMSIS/Include/core_cm7.h **** {
 921:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 922:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 923:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 924:../Drivers/CMSIS/Include/core_cm7.h **** } SCnSCB_Type;
 925:../Drivers/CMSIS/Include/core_cm7.h **** 
 926:../Drivers/CMSIS/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 927:../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 928:../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 929:../Drivers/CMSIS/Include/core_cm7.h **** 
 930:../Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 931:../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos    12U                                         /*!< ACTLR: 
 932:../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk    (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos)    /*!< ACTLR: 
 933:../Drivers/CMSIS/Include/core_cm7.h **** 
 934:../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos         11U                                         /*!< ACTLR: 
 935:../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk         (1UL << SCnSCB_ACTLR_DISRAMODE_Pos)         /*!< ACTLR: 
 936:../Drivers/CMSIS/Include/core_cm7.h **** 
 937:../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos         10U                                         /*!< ACTLR: 
 938:../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk         (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos)         /*!< ACTLR: 
 939:../Drivers/CMSIS/Include/core_cm7.h **** 
 940:../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 941:../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 942:../Drivers/CMSIS/Include/core_cm7.h **** 
 943:../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 944:../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 29


 945:../Drivers/CMSIS/Include/core_cm7.h **** 
 946:../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCnotSCB */
 947:../Drivers/CMSIS/Include/core_cm7.h **** 
 948:../Drivers/CMSIS/Include/core_cm7.h **** 
 949:../Drivers/CMSIS/Include/core_cm7.h **** /**
 950:../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 951:../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 952:../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Timer Registers.
 953:../Drivers/CMSIS/Include/core_cm7.h ****   @{
 954:../Drivers/CMSIS/Include/core_cm7.h ****  */
 955:../Drivers/CMSIS/Include/core_cm7.h **** 
 956:../Drivers/CMSIS/Include/core_cm7.h **** /**
 957:../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Timer (SysTick).
 958:../Drivers/CMSIS/Include/core_cm7.h ****  */
 959:../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 960:../Drivers/CMSIS/Include/core_cm7.h **** {
 961:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 962:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 963:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 964:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 965:../Drivers/CMSIS/Include/core_cm7.h **** } SysTick_Type;
 966:../Drivers/CMSIS/Include/core_cm7.h **** 
 967:../Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 968:../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 969:../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 970:../Drivers/CMSIS/Include/core_cm7.h **** 
 971:../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 972:../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 973:../Drivers/CMSIS/Include/core_cm7.h **** 
 974:../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 975:../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 976:../Drivers/CMSIS/Include/core_cm7.h **** 
 977:../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 978:../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 979:../Drivers/CMSIS/Include/core_cm7.h **** 
 980:../Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
 981:../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 982:../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 983:../Drivers/CMSIS/Include/core_cm7.h **** 
 984:../Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Current Register Definitions */
 985:../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 986:../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 987:../Drivers/CMSIS/Include/core_cm7.h **** 
 988:../Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
 989:../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 990:../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 991:../Drivers/CMSIS/Include/core_cm7.h **** 
 992:../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 993:../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 994:../Drivers/CMSIS/Include/core_cm7.h **** 
 995:../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 996:../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 997:../Drivers/CMSIS/Include/core_cm7.h **** 
 998:../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SysTick */
 999:../Drivers/CMSIS/Include/core_cm7.h **** 
1000:../Drivers/CMSIS/Include/core_cm7.h **** 
1001:../Drivers/CMSIS/Include/core_cm7.h **** /**
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 30


1002:../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1003:../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
1004:../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
1005:../Drivers/CMSIS/Include/core_cm7.h ****   @{
1006:../Drivers/CMSIS/Include/core_cm7.h ****  */
1007:../Drivers/CMSIS/Include/core_cm7.h **** 
1008:../Drivers/CMSIS/Include/core_cm7.h **** /**
1009:../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
1010:../Drivers/CMSIS/Include/core_cm7.h ****  */
1011:../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1012:../Drivers/CMSIS/Include/core_cm7.h **** {
1013:../Drivers/CMSIS/Include/core_cm7.h ****   __OM  union
1014:../Drivers/CMSIS/Include/core_cm7.h ****   {
1015:../Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1016:../Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1017:../Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1018:../Drivers/CMSIS/Include/core_cm7.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1019:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[864U];
1020:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1021:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[15U];
1022:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1023:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[15U];
1024:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1025:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[29U];
1026:../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
1027:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
1028:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
1029:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[43U];
1030:../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1031:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1032:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[6U];
1033:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
1034:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1035:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1036:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1037:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1038:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1039:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
1040:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1041:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
1042:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1043:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1044:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
1045:../Drivers/CMSIS/Include/core_cm7.h **** } ITM_Type;
1046:../Drivers/CMSIS/Include/core_cm7.h **** 
1047:../Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1048:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1049:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
1050:../Drivers/CMSIS/Include/core_cm7.h **** 
1051:../Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1052:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
1053:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1054:../Drivers/CMSIS/Include/core_cm7.h **** 
1055:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
1056:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
1057:../Drivers/CMSIS/Include/core_cm7.h **** 
1058:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 31


1059:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
1060:../Drivers/CMSIS/Include/core_cm7.h **** 
1061:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
1062:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
1063:../Drivers/CMSIS/Include/core_cm7.h **** 
1064:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1065:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1066:../Drivers/CMSIS/Include/core_cm7.h **** 
1067:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1068:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1069:../Drivers/CMSIS/Include/core_cm7.h **** 
1070:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
1071:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1072:../Drivers/CMSIS/Include/core_cm7.h **** 
1073:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1074:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1075:../Drivers/CMSIS/Include/core_cm7.h **** 
1076:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
1077:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1078:../Drivers/CMSIS/Include/core_cm7.h **** 
1079:../Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Write Register Definitions */
1080:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
1081:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
1082:../Drivers/CMSIS/Include/core_cm7.h **** 
1083:../Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Read Register Definitions */
1084:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
1085:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
1086:../Drivers/CMSIS/Include/core_cm7.h **** 
1087:../Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Mode Control Register Definitions */
1088:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
1089:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
1090:../Drivers/CMSIS/Include/core_cm7.h **** 
1091:../Drivers/CMSIS/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1092:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1093:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1094:../Drivers/CMSIS/Include/core_cm7.h **** 
1095:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1096:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1097:../Drivers/CMSIS/Include/core_cm7.h **** 
1098:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1099:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1100:../Drivers/CMSIS/Include/core_cm7.h **** 
1101:../Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_ITM */
1102:../Drivers/CMSIS/Include/core_cm7.h **** 
1103:../Drivers/CMSIS/Include/core_cm7.h **** 
1104:../Drivers/CMSIS/Include/core_cm7.h **** /**
1105:../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1106:../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1107:../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1108:../Drivers/CMSIS/Include/core_cm7.h ****   @{
1109:../Drivers/CMSIS/Include/core_cm7.h ****  */
1110:../Drivers/CMSIS/Include/core_cm7.h **** 
1111:../Drivers/CMSIS/Include/core_cm7.h **** /**
1112:../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1113:../Drivers/CMSIS/Include/core_cm7.h ****  */
1114:../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1115:../Drivers/CMSIS/Include/core_cm7.h **** {
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 32


1116:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1117:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1118:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1119:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1120:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1121:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1122:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1123:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
1124:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1125:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1126:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1127:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1128:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1129:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1130:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
1131:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[1U];
1132:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1133:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1134:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1135:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[1U];
1136:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1137:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1138:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1139:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[981U];
1140:../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1141:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1142:../Drivers/CMSIS/Include/core_cm7.h **** } DWT_Type;
1143:../Drivers/CMSIS/Include/core_cm7.h **** 
1144:../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Control Register Definitions */
1145:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
1146:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1147:../Drivers/CMSIS/Include/core_cm7.h **** 
1148:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1149:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1150:../Drivers/CMSIS/Include/core_cm7.h **** 
1151:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1152:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1153:../Drivers/CMSIS/Include/core_cm7.h **** 
1154:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
1155:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1156:../Drivers/CMSIS/Include/core_cm7.h **** 
1157:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1158:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1159:../Drivers/CMSIS/Include/core_cm7.h **** 
1160:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1161:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1162:../Drivers/CMSIS/Include/core_cm7.h **** 
1163:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1164:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1165:../Drivers/CMSIS/Include/core_cm7.h **** 
1166:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
1167:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
1168:../Drivers/CMSIS/Include/core_cm7.h **** 
1169:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1170:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
1171:../Drivers/CMSIS/Include/core_cm7.h **** 
1172:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 33


1173:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1174:../Drivers/CMSIS/Include/core_cm7.h **** 
1175:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1176:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1177:../Drivers/CMSIS/Include/core_cm7.h **** 
1178:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1179:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1180:../Drivers/CMSIS/Include/core_cm7.h **** 
1181:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1182:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
1183:../Drivers/CMSIS/Include/core_cm7.h **** 
1184:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
1185:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
1186:../Drivers/CMSIS/Include/core_cm7.h **** 
1187:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
1188:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1189:../Drivers/CMSIS/Include/core_cm7.h **** 
1190:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
1191:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1192:../Drivers/CMSIS/Include/core_cm7.h **** 
1193:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1194:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1195:../Drivers/CMSIS/Include/core_cm7.h **** 
1196:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1197:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1198:../Drivers/CMSIS/Include/core_cm7.h **** 
1199:../Drivers/CMSIS/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1200:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1201:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1202:../Drivers/CMSIS/Include/core_cm7.h **** 
1203:../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1204:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1205:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1206:../Drivers/CMSIS/Include/core_cm7.h **** 
1207:../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1208:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1209:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1210:../Drivers/CMSIS/Include/core_cm7.h **** 
1211:../Drivers/CMSIS/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
1212:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1213:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1214:../Drivers/CMSIS/Include/core_cm7.h **** 
1215:../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1216:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1217:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1218:../Drivers/CMSIS/Include/core_cm7.h **** 
1219:../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1220:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1221:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1222:../Drivers/CMSIS/Include/core_cm7.h **** 
1223:../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1224:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1225:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1226:../Drivers/CMSIS/Include/core_cm7.h **** 
1227:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1228:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1229:../Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 34


1230:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1231:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1232:../Drivers/CMSIS/Include/core_cm7.h **** 
1233:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1234:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1235:../Drivers/CMSIS/Include/core_cm7.h **** 
1236:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1237:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1238:../Drivers/CMSIS/Include/core_cm7.h **** 
1239:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1240:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1241:../Drivers/CMSIS/Include/core_cm7.h **** 
1242:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1243:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1244:../Drivers/CMSIS/Include/core_cm7.h **** 
1245:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1246:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1247:../Drivers/CMSIS/Include/core_cm7.h **** 
1248:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1249:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1250:../Drivers/CMSIS/Include/core_cm7.h **** 
1251:../Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_DWT */
1252:../Drivers/CMSIS/Include/core_cm7.h **** 
1253:../Drivers/CMSIS/Include/core_cm7.h **** 
1254:../Drivers/CMSIS/Include/core_cm7.h **** /**
1255:../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1256:../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1257:../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1258:../Drivers/CMSIS/Include/core_cm7.h ****   @{
1259:../Drivers/CMSIS/Include/core_cm7.h ****  */
1260:../Drivers/CMSIS/Include/core_cm7.h **** 
1261:../Drivers/CMSIS/Include/core_cm7.h **** /**
1262:../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1263:../Drivers/CMSIS/Include/core_cm7.h ****  */
1264:../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1265:../Drivers/CMSIS/Include/core_cm7.h **** {
1266:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1267:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1268:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[2U];
1269:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1270:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[55U];
1271:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1272:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[131U];
1273:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1274:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1275:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1276:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[759U];
1277:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1278:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1279:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1280:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[1U];
1281:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1282:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1283:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1284:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[39U];
1285:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1286:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 35


1287:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[8U];
1288:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1289:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1290:../Drivers/CMSIS/Include/core_cm7.h **** } TPI_Type;
1291:../Drivers/CMSIS/Include/core_cm7.h **** 
1292:../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1293:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1294:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1295:../Drivers/CMSIS/Include/core_cm7.h **** 
1296:../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1297:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1298:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1299:../Drivers/CMSIS/Include/core_cm7.h **** 
1300:../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1301:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1302:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1303:../Drivers/CMSIS/Include/core_cm7.h **** 
1304:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1305:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1306:../Drivers/CMSIS/Include/core_cm7.h **** 
1307:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1308:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1309:../Drivers/CMSIS/Include/core_cm7.h **** 
1310:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1311:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1312:../Drivers/CMSIS/Include/core_cm7.h **** 
1313:../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1314:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1315:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1316:../Drivers/CMSIS/Include/core_cm7.h **** 
1317:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1318:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1319:../Drivers/CMSIS/Include/core_cm7.h **** 
1320:../Drivers/CMSIS/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1321:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1322:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1323:../Drivers/CMSIS/Include/core_cm7.h **** 
1324:../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1325:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1326:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1327:../Drivers/CMSIS/Include/core_cm7.h **** 
1328:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1329:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1330:../Drivers/CMSIS/Include/core_cm7.h **** 
1331:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1332:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1333:../Drivers/CMSIS/Include/core_cm7.h **** 
1334:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1335:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1336:../Drivers/CMSIS/Include/core_cm7.h **** 
1337:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1338:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1339:../Drivers/CMSIS/Include/core_cm7.h **** 
1340:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1341:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1342:../Drivers/CMSIS/Include/core_cm7.h **** 
1343:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 36


1344:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1345:../Drivers/CMSIS/Include/core_cm7.h **** 
1346:../Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1347:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1348:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1349:../Drivers/CMSIS/Include/core_cm7.h **** 
1350:../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1351:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1352:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1353:../Drivers/CMSIS/Include/core_cm7.h **** 
1354:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1355:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1356:../Drivers/CMSIS/Include/core_cm7.h **** 
1357:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1358:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1359:../Drivers/CMSIS/Include/core_cm7.h **** 
1360:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1361:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1362:../Drivers/CMSIS/Include/core_cm7.h **** 
1363:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1364:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1365:../Drivers/CMSIS/Include/core_cm7.h **** 
1366:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1367:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1368:../Drivers/CMSIS/Include/core_cm7.h **** 
1369:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1370:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1371:../Drivers/CMSIS/Include/core_cm7.h **** 
1372:../Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1373:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1374:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1375:../Drivers/CMSIS/Include/core_cm7.h **** 
1376:../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
1377:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1378:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1379:../Drivers/CMSIS/Include/core_cm7.h **** 
1380:../Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1381:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1382:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1383:../Drivers/CMSIS/Include/core_cm7.h **** 
1384:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1385:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1386:../Drivers/CMSIS/Include/core_cm7.h **** 
1387:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1388:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1389:../Drivers/CMSIS/Include/core_cm7.h **** 
1390:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1391:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1392:../Drivers/CMSIS/Include/core_cm7.h **** 
1393:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1394:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1395:../Drivers/CMSIS/Include/core_cm7.h **** 
1396:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1397:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1398:../Drivers/CMSIS/Include/core_cm7.h **** 
1399:../Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1400:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 37


1401:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1402:../Drivers/CMSIS/Include/core_cm7.h **** 
1403:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1404:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1405:../Drivers/CMSIS/Include/core_cm7.h **** 
1406:../Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_TPI */
1407:../Drivers/CMSIS/Include/core_cm7.h **** 
1408:../Drivers/CMSIS/Include/core_cm7.h **** 
1409:../Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1410:../Drivers/CMSIS/Include/core_cm7.h **** /**
1411:../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1412:../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1413:../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1414:../Drivers/CMSIS/Include/core_cm7.h ****   @{
1415:../Drivers/CMSIS/Include/core_cm7.h ****  */
1416:../Drivers/CMSIS/Include/core_cm7.h **** 
1417:../Drivers/CMSIS/Include/core_cm7.h **** /**
1418:../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1419:../Drivers/CMSIS/Include/core_cm7.h ****  */
1420:../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1421:../Drivers/CMSIS/Include/core_cm7.h **** {
1422:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1423:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1424:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1425:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1426:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1427:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1428:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1429:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1430:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1431:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1432:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1433:../Drivers/CMSIS/Include/core_cm7.h **** } MPU_Type;
1434:../Drivers/CMSIS/Include/core_cm7.h **** 
1435:../Drivers/CMSIS/Include/core_cm7.h **** /* MPU Type Register Definitions */
1436:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1437:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1438:../Drivers/CMSIS/Include/core_cm7.h **** 
1439:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1440:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1441:../Drivers/CMSIS/Include/core_cm7.h **** 
1442:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1443:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1444:../Drivers/CMSIS/Include/core_cm7.h **** 
1445:../Drivers/CMSIS/Include/core_cm7.h **** /* MPU Control Register Definitions */
1446:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1447:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1448:../Drivers/CMSIS/Include/core_cm7.h **** 
1449:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1450:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1451:../Drivers/CMSIS/Include/core_cm7.h **** 
1452:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1453:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1454:../Drivers/CMSIS/Include/core_cm7.h **** 
1455:../Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1456:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1457:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 38


1458:../Drivers/CMSIS/Include/core_cm7.h **** 
1459:../Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1460:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1461:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1462:../Drivers/CMSIS/Include/core_cm7.h **** 
1463:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1464:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1465:../Drivers/CMSIS/Include/core_cm7.h **** 
1466:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1467:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1468:../Drivers/CMSIS/Include/core_cm7.h **** 
1469:../Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
1470:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1471:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1472:../Drivers/CMSIS/Include/core_cm7.h **** 
1473:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1474:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1475:../Drivers/CMSIS/Include/core_cm7.h **** 
1476:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1477:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1478:../Drivers/CMSIS/Include/core_cm7.h **** 
1479:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1480:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1481:../Drivers/CMSIS/Include/core_cm7.h **** 
1482:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1483:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1484:../Drivers/CMSIS/Include/core_cm7.h **** 
1485:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1486:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1487:../Drivers/CMSIS/Include/core_cm7.h **** 
1488:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1489:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1490:../Drivers/CMSIS/Include/core_cm7.h **** 
1491:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1492:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1493:../Drivers/CMSIS/Include/core_cm7.h **** 
1494:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1495:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1496:../Drivers/CMSIS/Include/core_cm7.h **** 
1497:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1498:../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1499:../Drivers/CMSIS/Include/core_cm7.h **** 
1500:../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1501:../Drivers/CMSIS/Include/core_cm7.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1502:../Drivers/CMSIS/Include/core_cm7.h **** 
1503:../Drivers/CMSIS/Include/core_cm7.h **** 
1504:../Drivers/CMSIS/Include/core_cm7.h **** /**
1505:../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1506:../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1507:../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1508:../Drivers/CMSIS/Include/core_cm7.h ****   @{
1509:../Drivers/CMSIS/Include/core_cm7.h ****  */
1510:../Drivers/CMSIS/Include/core_cm7.h **** 
1511:../Drivers/CMSIS/Include/core_cm7.h **** /**
1512:../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1513:../Drivers/CMSIS/Include/core_cm7.h ****  */
1514:../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 39


1515:../Drivers/CMSIS/Include/core_cm7.h **** {
1516:../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1517:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1518:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1519:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1520:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1521:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1522:../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1523:../Drivers/CMSIS/Include/core_cm7.h **** } FPU_Type;
1524:../Drivers/CMSIS/Include/core_cm7.h **** 
1525:../Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
1526:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1527:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1528:../Drivers/CMSIS/Include/core_cm7.h **** 
1529:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1530:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1531:../Drivers/CMSIS/Include/core_cm7.h **** 
1532:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1533:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1534:../Drivers/CMSIS/Include/core_cm7.h **** 
1535:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1536:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1537:../Drivers/CMSIS/Include/core_cm7.h **** 
1538:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1539:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1540:../Drivers/CMSIS/Include/core_cm7.h **** 
1541:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1542:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1543:../Drivers/CMSIS/Include/core_cm7.h **** 
1544:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1545:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1546:../Drivers/CMSIS/Include/core_cm7.h **** 
1547:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1548:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1549:../Drivers/CMSIS/Include/core_cm7.h **** 
1550:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1551:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1552:../Drivers/CMSIS/Include/core_cm7.h **** 
1553:../Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1554:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1555:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1556:../Drivers/CMSIS/Include/core_cm7.h **** 
1557:../Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1558:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1559:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1560:../Drivers/CMSIS/Include/core_cm7.h **** 
1561:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1562:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1563:../Drivers/CMSIS/Include/core_cm7.h **** 
1564:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1565:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1566:../Drivers/CMSIS/Include/core_cm7.h **** 
1567:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1568:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1569:../Drivers/CMSIS/Include/core_cm7.h **** 
1570:../Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1571:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 40


1572:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1573:../Drivers/CMSIS/Include/core_cm7.h **** 
1574:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1575:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1576:../Drivers/CMSIS/Include/core_cm7.h **** 
1577:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1578:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1579:../Drivers/CMSIS/Include/core_cm7.h **** 
1580:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1581:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1582:../Drivers/CMSIS/Include/core_cm7.h **** 
1583:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1584:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1585:../Drivers/CMSIS/Include/core_cm7.h **** 
1586:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1587:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1588:../Drivers/CMSIS/Include/core_cm7.h **** 
1589:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1590:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1591:../Drivers/CMSIS/Include/core_cm7.h **** 
1592:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1593:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1594:../Drivers/CMSIS/Include/core_cm7.h **** 
1595:../Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1596:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1597:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1598:../Drivers/CMSIS/Include/core_cm7.h **** 
1599:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1600:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1601:../Drivers/CMSIS/Include/core_cm7.h **** 
1602:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1603:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1604:../Drivers/CMSIS/Include/core_cm7.h **** 
1605:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1606:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1607:../Drivers/CMSIS/Include/core_cm7.h **** 
1608:../Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 2 Definitions */
1609:../Drivers/CMSIS/Include/core_cm7.h **** 
1610:../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_FPU */
1611:../Drivers/CMSIS/Include/core_cm7.h **** 
1612:../Drivers/CMSIS/Include/core_cm7.h **** 
1613:../Drivers/CMSIS/Include/core_cm7.h **** /**
1614:../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1615:../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1616:../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Core Debug Registers
1617:../Drivers/CMSIS/Include/core_cm7.h ****   @{
1618:../Drivers/CMSIS/Include/core_cm7.h ****  */
1619:../Drivers/CMSIS/Include/core_cm7.h **** 
1620:../Drivers/CMSIS/Include/core_cm7.h **** /**
1621:../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1622:../Drivers/CMSIS/Include/core_cm7.h ****  */
1623:../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1624:../Drivers/CMSIS/Include/core_cm7.h **** {
1625:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1626:../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1627:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1628:../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 41


1629:../Drivers/CMSIS/Include/core_cm7.h **** } CoreDebug_Type;
1630:../Drivers/CMSIS/Include/core_cm7.h **** 
1631:../Drivers/CMSIS/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1632:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1633:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1634:../Drivers/CMSIS/Include/core_cm7.h **** 
1635:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1636:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1637:../Drivers/CMSIS/Include/core_cm7.h **** 
1638:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1639:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1640:../Drivers/CMSIS/Include/core_cm7.h **** 
1641:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1642:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1643:../Drivers/CMSIS/Include/core_cm7.h **** 
1644:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1645:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1646:../Drivers/CMSIS/Include/core_cm7.h **** 
1647:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1648:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1649:../Drivers/CMSIS/Include/core_cm7.h **** 
1650:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1651:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1652:../Drivers/CMSIS/Include/core_cm7.h **** 
1653:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1654:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1655:../Drivers/CMSIS/Include/core_cm7.h **** 
1656:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1657:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1658:../Drivers/CMSIS/Include/core_cm7.h **** 
1659:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1660:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1661:../Drivers/CMSIS/Include/core_cm7.h **** 
1662:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1663:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1664:../Drivers/CMSIS/Include/core_cm7.h **** 
1665:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1666:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1667:../Drivers/CMSIS/Include/core_cm7.h **** 
1668:../Drivers/CMSIS/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1669:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1670:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1671:../Drivers/CMSIS/Include/core_cm7.h **** 
1672:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1673:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1674:../Drivers/CMSIS/Include/core_cm7.h **** 
1675:../Drivers/CMSIS/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1676:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1677:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1678:../Drivers/CMSIS/Include/core_cm7.h **** 
1679:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1680:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1681:../Drivers/CMSIS/Include/core_cm7.h **** 
1682:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1683:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1684:../Drivers/CMSIS/Include/core_cm7.h **** 
1685:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 42


1686:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1687:../Drivers/CMSIS/Include/core_cm7.h **** 
1688:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1689:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1690:../Drivers/CMSIS/Include/core_cm7.h **** 
1691:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1692:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1693:../Drivers/CMSIS/Include/core_cm7.h **** 
1694:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1695:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1696:../Drivers/CMSIS/Include/core_cm7.h **** 
1697:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1698:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1699:../Drivers/CMSIS/Include/core_cm7.h **** 
1700:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1701:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1702:../Drivers/CMSIS/Include/core_cm7.h **** 
1703:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1704:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1705:../Drivers/CMSIS/Include/core_cm7.h **** 
1706:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1707:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1708:../Drivers/CMSIS/Include/core_cm7.h **** 
1709:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1710:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1711:../Drivers/CMSIS/Include/core_cm7.h **** 
1712:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1713:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1714:../Drivers/CMSIS/Include/core_cm7.h **** 
1715:../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1716:../Drivers/CMSIS/Include/core_cm7.h **** 
1717:../Drivers/CMSIS/Include/core_cm7.h **** 
1718:../Drivers/CMSIS/Include/core_cm7.h **** /**
1719:../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1720:../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1721:../Drivers/CMSIS/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1722:../Drivers/CMSIS/Include/core_cm7.h ****   @{
1723:../Drivers/CMSIS/Include/core_cm7.h ****  */
1724:../Drivers/CMSIS/Include/core_cm7.h **** 
1725:../Drivers/CMSIS/Include/core_cm7.h **** /**
1726:../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1727:../Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1728:../Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1729:../Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted value.
1730:../Drivers/CMSIS/Include/core_cm7.h **** */
1731:../Drivers/CMSIS/Include/core_cm7.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1732:../Drivers/CMSIS/Include/core_cm7.h **** 
1733:../Drivers/CMSIS/Include/core_cm7.h **** /**
1734:../Drivers/CMSIS/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1735:../Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1736:../Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1737:../Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1738:../Drivers/CMSIS/Include/core_cm7.h **** */
1739:../Drivers/CMSIS/Include/core_cm7.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1740:../Drivers/CMSIS/Include/core_cm7.h **** 
1741:../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1742:../Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 43


1743:../Drivers/CMSIS/Include/core_cm7.h **** 
1744:../Drivers/CMSIS/Include/core_cm7.h **** /**
1745:../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1746:../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
1747:../Drivers/CMSIS/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1748:../Drivers/CMSIS/Include/core_cm7.h ****   @{
1749:../Drivers/CMSIS/Include/core_cm7.h ****  */
1750:../Drivers/CMSIS/Include/core_cm7.h **** 
1751:../Drivers/CMSIS/Include/core_cm7.h **** /* Memory mapping of Core Hardware */
1752:../Drivers/CMSIS/Include/core_cm7.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1753:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1754:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1755:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1756:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1757:../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1758:../Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1759:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1760:../Drivers/CMSIS/Include/core_cm7.h **** 
1761:../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1762:../Drivers/CMSIS/Include/core_cm7.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1763:../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1764:../Drivers/CMSIS/Include/core_cm7.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1765:../Drivers/CMSIS/Include/core_cm7.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1766:../Drivers/CMSIS/Include/core_cm7.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1767:../Drivers/CMSIS/Include/core_cm7.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1768:../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1769:../Drivers/CMSIS/Include/core_cm7.h **** 
1770:../Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1771:../Drivers/CMSIS/Include/core_cm7.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1772:../Drivers/CMSIS/Include/core_cm7.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1773:../Drivers/CMSIS/Include/core_cm7.h **** #endif
1774:../Drivers/CMSIS/Include/core_cm7.h **** 
1775:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1776:../Drivers/CMSIS/Include/core_cm7.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1777:../Drivers/CMSIS/Include/core_cm7.h **** 
1778:../Drivers/CMSIS/Include/core_cm7.h **** /*@} */
1779:../Drivers/CMSIS/Include/core_cm7.h **** 
1780:../Drivers/CMSIS/Include/core_cm7.h **** 
1781:../Drivers/CMSIS/Include/core_cm7.h **** 
1782:../Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
1783:../Drivers/CMSIS/Include/core_cm7.h ****  *                Hardware Abstraction Layer
1784:../Drivers/CMSIS/Include/core_cm7.h ****   Core Function Interface contains:
1785:../Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Functions
1786:../Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Functions
1787:../Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Functions
1788:../Drivers/CMSIS/Include/core_cm7.h ****   - Core Register Access Functions
1789:../Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
1790:../Drivers/CMSIS/Include/core_cm7.h **** /**
1791:../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1792:../Drivers/CMSIS/Include/core_cm7.h **** */
1793:../Drivers/CMSIS/Include/core_cm7.h **** 
1794:../Drivers/CMSIS/Include/core_cm7.h **** 
1795:../Drivers/CMSIS/Include/core_cm7.h **** 
1796:../Drivers/CMSIS/Include/core_cm7.h **** /* ##########################   NVIC functions  #################################### */
1797:../Drivers/CMSIS/Include/core_cm7.h **** /**
1798:../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
1799:../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 44


1800:../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1801:../Drivers/CMSIS/Include/core_cm7.h ****   @{
1802:../Drivers/CMSIS/Include/core_cm7.h ****  */
1803:../Drivers/CMSIS/Include/core_cm7.h **** 
1804:../Drivers/CMSIS/Include/core_cm7.h **** #ifndef CMSIS_NVIC_VIRTUAL
1805:../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1806:../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1807:../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1808:../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1809:../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1810:../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1811:../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1812:../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1813:../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetActive              __NVIC_GetActive
1814:../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1815:../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1816:../Drivers/CMSIS/Include/core_cm7.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1817:../Drivers/CMSIS/Include/core_cm7.h **** 
1818:../Drivers/CMSIS/Include/core_cm7.h **** #ifndef CMSIS_VECTAB_VIRTUAL
1819:../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetVector              __NVIC_SetVector
1820:../Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetVector              __NVIC_GetVector
1821:../Drivers/CMSIS/Include/core_cm7.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1822:../Drivers/CMSIS/Include/core_cm7.h **** 
1823:../Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_USER_IRQ_OFFSET          16
1824:../Drivers/CMSIS/Include/core_cm7.h **** 
1825:../Drivers/CMSIS/Include/core_cm7.h **** 
1826:../Drivers/CMSIS/Include/core_cm7.h **** 
1827:../Drivers/CMSIS/Include/core_cm7.h **** /**
1828:../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Priority Grouping
1829:../Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority grouping field using the required unlock sequence.
1830:../Drivers/CMSIS/Include/core_cm7.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1831:../Drivers/CMSIS/Include/core_cm7.h ****            Only values from 0..7 are used.
1832:../Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1833:../Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1834:../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      PriorityGroup  Priority grouping field.
1835:../Drivers/CMSIS/Include/core_cm7.h ****  */
1836:../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1837:../Drivers/CMSIS/Include/core_cm7.h **** {
1838:../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t reg_value;
1839:../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1840:../Drivers/CMSIS/Include/core_cm7.h **** 
1841:../Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1842:../Drivers/CMSIS/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1843:../Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
1844:../Drivers/CMSIS/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1845:../Drivers/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1846:../Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
1847:../Drivers/CMSIS/Include/core_cm7.h **** }
1848:../Drivers/CMSIS/Include/core_cm7.h **** 
1849:../Drivers/CMSIS/Include/core_cm7.h **** 
1850:../Drivers/CMSIS/Include/core_cm7.h **** /**
1851:../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Priority Grouping
1852:../Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1853:../Drivers/CMSIS/Include/core_cm7.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1854:../Drivers/CMSIS/Include/core_cm7.h ****  */
1855:../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1856:../Drivers/CMSIS/Include/core_cm7.h **** {
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 45


1857:../Drivers/CMSIS/Include/core_cm7.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1858:../Drivers/CMSIS/Include/core_cm7.h **** }
1859:../Drivers/CMSIS/Include/core_cm7.h **** 
1860:../Drivers/CMSIS/Include/core_cm7.h **** 
1861:../Drivers/CMSIS/Include/core_cm7.h **** /**
1862:../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable Interrupt
1863:../Drivers/CMSIS/Include/core_cm7.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1864:../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1865:../Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1866:../Drivers/CMSIS/Include/core_cm7.h ****  */
1867:../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1868:../Drivers/CMSIS/Include/core_cm7.h **** {
1869:../Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1870:../Drivers/CMSIS/Include/core_cm7.h ****   {
1871:../Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
1872:../Drivers/CMSIS/Include/core_cm7.h ****   }
1873:../Drivers/CMSIS/Include/core_cm7.h **** }
1874:../Drivers/CMSIS/Include/core_cm7.h **** 
1875:../Drivers/CMSIS/Include/core_cm7.h **** 
1876:../Drivers/CMSIS/Include/core_cm7.h **** /**
1877:../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Enable status
1878:../Drivers/CMSIS/Include/core_cm7.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1879:../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1880:../Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt is not enabled.
1881:../Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt is enabled.
1882:../Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1883:../Drivers/CMSIS/Include/core_cm7.h ****  */
1884:../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1885:../Drivers/CMSIS/Include/core_cm7.h **** {
1886:../Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1887:../Drivers/CMSIS/Include/core_cm7.h ****   {
1888:../Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32
1889:../Drivers/CMSIS/Include/core_cm7.h ****   }
1890:../Drivers/CMSIS/Include/core_cm7.h ****   else
1891:../Drivers/CMSIS/Include/core_cm7.h ****   {
1892:../Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1893:../Drivers/CMSIS/Include/core_cm7.h ****   }
1894:../Drivers/CMSIS/Include/core_cm7.h **** }
1895:../Drivers/CMSIS/Include/core_cm7.h **** 
1896:../Drivers/CMSIS/Include/core_cm7.h **** 
1897:../Drivers/CMSIS/Include/core_cm7.h **** /**
1898:../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable Interrupt
1899:../Drivers/CMSIS/Include/core_cm7.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1900:../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1901:../Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1902:../Drivers/CMSIS/Include/core_cm7.h ****  */
1903:../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1904:../Drivers/CMSIS/Include/core_cm7.h **** {
1905:../Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1906:../Drivers/CMSIS/Include/core_cm7.h ****   {
1907:../Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
1908:../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
1909:../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
1910:../Drivers/CMSIS/Include/core_cm7.h ****   }
1911:../Drivers/CMSIS/Include/core_cm7.h **** }
1912:../Drivers/CMSIS/Include/core_cm7.h **** 
1913:../Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 46


1914:../Drivers/CMSIS/Include/core_cm7.h **** /**
1915:../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Pending Interrupt
1916:../Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1917:../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1918:../Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not pending.
1919:../Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is pending.
1920:../Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1921:../Drivers/CMSIS/Include/core_cm7.h ****  */
1922:../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1923:../Drivers/CMSIS/Include/core_cm7.h **** {
1924:../Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1925:../Drivers/CMSIS/Include/core_cm7.h ****   {
1926:../Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32
1927:../Drivers/CMSIS/Include/core_cm7.h ****   }
1928:../Drivers/CMSIS/Include/core_cm7.h ****   else
1929:../Drivers/CMSIS/Include/core_cm7.h ****   {
1930:../Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1931:../Drivers/CMSIS/Include/core_cm7.h ****   }
1932:../Drivers/CMSIS/Include/core_cm7.h **** }
1933:../Drivers/CMSIS/Include/core_cm7.h **** 
1934:../Drivers/CMSIS/Include/core_cm7.h **** 
1935:../Drivers/CMSIS/Include/core_cm7.h **** /**
1936:../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Pending Interrupt
1937:../Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1938:../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1939:../Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1940:../Drivers/CMSIS/Include/core_cm7.h ****  */
1941:../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1942:../Drivers/CMSIS/Include/core_cm7.h **** {
1943:../Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1944:../Drivers/CMSIS/Include/core_cm7.h ****   {
1945:../Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
1946:../Drivers/CMSIS/Include/core_cm7.h ****   }
1947:../Drivers/CMSIS/Include/core_cm7.h **** }
1948:../Drivers/CMSIS/Include/core_cm7.h **** 
1949:../Drivers/CMSIS/Include/core_cm7.h **** 
1950:../Drivers/CMSIS/Include/core_cm7.h **** /**
1951:../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clear Pending Interrupt
1952:../Drivers/CMSIS/Include/core_cm7.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1953:../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1954:../Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1955:../Drivers/CMSIS/Include/core_cm7.h ****  */
1956:../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1957:../Drivers/CMSIS/Include/core_cm7.h **** {
1958:../Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1959:../Drivers/CMSIS/Include/core_cm7.h ****   {
1960:../Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
1961:../Drivers/CMSIS/Include/core_cm7.h ****   }
1962:../Drivers/CMSIS/Include/core_cm7.h **** }
1963:../Drivers/CMSIS/Include/core_cm7.h **** 
1964:../Drivers/CMSIS/Include/core_cm7.h **** 
1965:../Drivers/CMSIS/Include/core_cm7.h **** /**
1966:../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Active Interrupt
1967:../Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1968:../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1969:../Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not active.
1970:../Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is active.
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 47


1971:../Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1972:../Drivers/CMSIS/Include/core_cm7.h ****  */
1973:../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1974:../Drivers/CMSIS/Include/core_cm7.h **** {
1975:../Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1976:../Drivers/CMSIS/Include/core_cm7.h ****   {
1977:../Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32
1978:../Drivers/CMSIS/Include/core_cm7.h ****   }
1979:../Drivers/CMSIS/Include/core_cm7.h ****   else
1980:../Drivers/CMSIS/Include/core_cm7.h ****   {
1981:../Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1982:../Drivers/CMSIS/Include/core_cm7.h ****   }
1983:../Drivers/CMSIS/Include/core_cm7.h **** }
1984:../Drivers/CMSIS/Include/core_cm7.h **** 
1985:../Drivers/CMSIS/Include/core_cm7.h **** 
1986:../Drivers/CMSIS/Include/core_cm7.h **** /**
1987:../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Priority
1988:../Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1989:../Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
1990:../Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
1991:../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
1992:../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]  priority  Priority to set.
1993:../Drivers/CMSIS/Include/core_cm7.h ****   \note    The priority cannot be set for every processor exception.
1994:../Drivers/CMSIS/Include/core_cm7.h ****  */
1995:../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1996:../Drivers/CMSIS/Include/core_cm7.h **** {
1997:../Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1998:../Drivers/CMSIS/Include/core_cm7.h ****   {
1999:../Drivers/CMSIS/Include/core_cm7.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_B
2000:../Drivers/CMSIS/Include/core_cm7.h ****   }
2001:../Drivers/CMSIS/Include/core_cm7.h ****   else
2002:../Drivers/CMSIS/Include/core_cm7.h ****   {
2003:../Drivers/CMSIS/Include/core_cm7.h ****     SCB->SHPR[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_B
2004:../Drivers/CMSIS/Include/core_cm7.h ****   }
2005:../Drivers/CMSIS/Include/core_cm7.h **** }
2006:../Drivers/CMSIS/Include/core_cm7.h **** 
2007:../Drivers/CMSIS/Include/core_cm7.h **** 
2008:../Drivers/CMSIS/Include/core_cm7.h **** /**
2009:../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Priority
2010:../Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
2011:../Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2012:../Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2013:../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn  Interrupt number.
2014:../Drivers/CMSIS/Include/core_cm7.h ****   \return             Interrupt Priority.
2015:../Drivers/CMSIS/Include/core_cm7.h ****                       Value is aligned automatically to the implemented priority bits of the microc
2016:../Drivers/CMSIS/Include/core_cm7.h ****  */
2017:../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
2018:../Drivers/CMSIS/Include/core_cm7.h **** {
2019:../Drivers/CMSIS/Include/core_cm7.h **** 
2020:../Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2021:../Drivers/CMSIS/Include/core_cm7.h ****   {
2022:../Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]                >> (8U - __NVIC_PRIO_BITS)
2023:../Drivers/CMSIS/Include/core_cm7.h ****   }
2024:../Drivers/CMSIS/Include/core_cm7.h ****   else
2025:../Drivers/CMSIS/Include/core_cm7.h ****   {
2026:../Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)
2027:../Drivers/CMSIS/Include/core_cm7.h ****   }
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 48


2028:../Drivers/CMSIS/Include/core_cm7.h **** }
2029:../Drivers/CMSIS/Include/core_cm7.h **** 
2030:../Drivers/CMSIS/Include/core_cm7.h **** 
2031:../Drivers/CMSIS/Include/core_cm7.h **** /**
2032:../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Encode Priority
2033:../Drivers/CMSIS/Include/core_cm7.h ****   \details Encodes the priority for an interrupt with the given priority group,
2034:../Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value, and subpriority value.
2035:../Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2036:../Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2037:../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2038:../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
2039:../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
2040:../Drivers/CMSIS/Include/core_cm7.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
2041:../Drivers/CMSIS/Include/core_cm7.h ****  */
2042:../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
2043:../Drivers/CMSIS/Include/core_cm7.h **** {
2044:../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2045:../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2046:../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2047:../Drivers/CMSIS/Include/core_cm7.h **** 
2048:../Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2049:../Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2050:../Drivers/CMSIS/Include/core_cm7.h **** 
2051:../Drivers/CMSIS/Include/core_cm7.h ****   return (
2052:../Drivers/CMSIS/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
2053:../Drivers/CMSIS/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
2054:../Drivers/CMSIS/Include/core_cm7.h ****          );
2055:../Drivers/CMSIS/Include/core_cm7.h **** }
2056:../Drivers/CMSIS/Include/core_cm7.h **** 
2057:../Drivers/CMSIS/Include/core_cm7.h **** 
2058:../Drivers/CMSIS/Include/core_cm7.h **** /**
2059:../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Decode Priority
2060:../Drivers/CMSIS/Include/core_cm7.h ****   \details Decodes an interrupt priority value with a given priority group to
2061:../Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value and subpriority value.
2062:../Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2063:../Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
2064:../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
2065:../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2066:../Drivers/CMSIS/Include/core_cm7.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
2067:../Drivers/CMSIS/Include/core_cm7.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
2068:../Drivers/CMSIS/Include/core_cm7.h ****  */
2069:../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
2070:../Drivers/CMSIS/Include/core_cm7.h **** {
2071:../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2072:../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2073:../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2074:../Drivers/CMSIS/Include/core_cm7.h **** 
2075:../Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2076:../Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2077:../Drivers/CMSIS/Include/core_cm7.h **** 
2078:../Drivers/CMSIS/Include/core_cm7.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
2079:../Drivers/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
2080:../Drivers/CMSIS/Include/core_cm7.h **** }
2081:../Drivers/CMSIS/Include/core_cm7.h **** 
2082:../Drivers/CMSIS/Include/core_cm7.h **** 
2083:../Drivers/CMSIS/Include/core_cm7.h **** /**
2084:../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Vector
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 49


2085:../Drivers/CMSIS/Include/core_cm7.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
2086:../Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2087:../Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2088:../Drivers/CMSIS/Include/core_cm7.h ****            VTOR must been relocated to SRAM before.
2089:../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number
2090:../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   vector    Address of interrupt handler function
2091:../Drivers/CMSIS/Include/core_cm7.h ****  */
2092:../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
2093:../Drivers/CMSIS/Include/core_cm7.h **** {
2094:../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2095:../Drivers/CMSIS/Include/core_cm7.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
2096:../Drivers/CMSIS/Include/core_cm7.h **** }
2097:../Drivers/CMSIS/Include/core_cm7.h **** 
2098:../Drivers/CMSIS/Include/core_cm7.h **** 
2099:../Drivers/CMSIS/Include/core_cm7.h **** /**
2100:../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Vector
2101:../Drivers/CMSIS/Include/core_cm7.h ****   \details Reads an interrupt vector from interrupt vector table.
2102:../Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2103:../Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2104:../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number.
2105:../Drivers/CMSIS/Include/core_cm7.h ****   \return                 Address of interrupt handler function
2106:../Drivers/CMSIS/Include/core_cm7.h ****  */
2107:../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
2108:../Drivers/CMSIS/Include/core_cm7.h **** {
2109:../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2110:../Drivers/CMSIS/Include/core_cm7.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
2111:../Drivers/CMSIS/Include/core_cm7.h **** }
2112:../Drivers/CMSIS/Include/core_cm7.h **** 
2113:../Drivers/CMSIS/Include/core_cm7.h **** 
2114:../Drivers/CMSIS/Include/core_cm7.h **** /**
2115:../Drivers/CMSIS/Include/core_cm7.h ****   \brief   System Reset
2116:../Drivers/CMSIS/Include/core_cm7.h ****   \details Initiates a system reset request to reset the MCU.
2117:../Drivers/CMSIS/Include/core_cm7.h ****  */
2118:../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_SystemReset(void)
2119:../Drivers/CMSIS/Include/core_cm7.h **** {
2120:../Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure all outstanding memor
2121:../Drivers/CMSIS/Include/core_cm7.h ****                                                                        buffered write are completed
2122:../Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
2123:../Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
2124:../Drivers/CMSIS/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2125:../Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure completion of memory 
2126:../Drivers/CMSIS/Include/core_cm7.h **** 
2127:../Drivers/CMSIS/Include/core_cm7.h ****   for(;;)                                                           /* wait until reset */
2128:../Drivers/CMSIS/Include/core_cm7.h ****   {
2129:../Drivers/CMSIS/Include/core_cm7.h ****     __NOP();
2130:../Drivers/CMSIS/Include/core_cm7.h ****   }
2131:../Drivers/CMSIS/Include/core_cm7.h **** }
2132:../Drivers/CMSIS/Include/core_cm7.h **** 
2133:../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_NVICFunctions */
2134:../Drivers/CMSIS/Include/core_cm7.h **** 
2135:../Drivers/CMSIS/Include/core_cm7.h **** 
2136:../Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  FPU functions  #################################### */
2137:../Drivers/CMSIS/Include/core_cm7.h **** /**
2138:../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2139:../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
2140:../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Function that provides FPU type.
2141:../Drivers/CMSIS/Include/core_cm7.h ****   @{
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 50


2142:../Drivers/CMSIS/Include/core_cm7.h ****  */
2143:../Drivers/CMSIS/Include/core_cm7.h **** 
2144:../Drivers/CMSIS/Include/core_cm7.h **** /**
2145:../Drivers/CMSIS/Include/core_cm7.h ****   \brief   get FPU type
2146:../Drivers/CMSIS/Include/core_cm7.h ****   \details returns the FPU type
2147:../Drivers/CMSIS/Include/core_cm7.h ****   \returns
2148:../Drivers/CMSIS/Include/core_cm7.h ****    - \b  0: No FPU
2149:../Drivers/CMSIS/Include/core_cm7.h ****    - \b  1: Single precision FPU
2150:../Drivers/CMSIS/Include/core_cm7.h ****    - \b  2: Double + Single precision FPU
2151:../Drivers/CMSIS/Include/core_cm7.h ****  */
2152:../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2153:../Drivers/CMSIS/Include/core_cm7.h **** {
2154:../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t mvfr0;
2155:../Drivers/CMSIS/Include/core_cm7.h **** 
2156:../Drivers/CMSIS/Include/core_cm7.h ****   mvfr0 = SCB->MVFR0;
2157:../Drivers/CMSIS/Include/core_cm7.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x220U)
2158:../Drivers/CMSIS/Include/core_cm7.h ****   {
2159:../Drivers/CMSIS/Include/core_cm7.h ****     return 2U;           /* Double + Single precision FPU */
2160:../Drivers/CMSIS/Include/core_cm7.h ****   }
2161:../Drivers/CMSIS/Include/core_cm7.h ****   else if ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
2162:../Drivers/CMSIS/Include/core_cm7.h ****   {
2163:../Drivers/CMSIS/Include/core_cm7.h ****     return 1U;           /* Single precision FPU */
2164:../Drivers/CMSIS/Include/core_cm7.h ****   }
2165:../Drivers/CMSIS/Include/core_cm7.h ****   else
2166:../Drivers/CMSIS/Include/core_cm7.h ****   {
2167:../Drivers/CMSIS/Include/core_cm7.h ****     return 0U;           /* No FPU */
2168:../Drivers/CMSIS/Include/core_cm7.h ****   }
2169:../Drivers/CMSIS/Include/core_cm7.h **** }
2170:../Drivers/CMSIS/Include/core_cm7.h **** 
2171:../Drivers/CMSIS/Include/core_cm7.h **** 
2172:../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
2173:../Drivers/CMSIS/Include/core_cm7.h **** 
2174:../Drivers/CMSIS/Include/core_cm7.h **** 
2175:../Drivers/CMSIS/Include/core_cm7.h **** 
2176:../Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
2177:../Drivers/CMSIS/Include/core_cm7.h **** /**
2178:../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2179:../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2180:../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2181:../Drivers/CMSIS/Include/core_cm7.h ****   @{
2182:../Drivers/CMSIS/Include/core_cm7.h ****  */
2183:../Drivers/CMSIS/Include/core_cm7.h **** 
2184:../Drivers/CMSIS/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2185:../Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
2186:../Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
2187:../Drivers/CMSIS/Include/core_cm7.h **** 
2188:../Drivers/CMSIS/Include/core_cm7.h **** 
2189:../Drivers/CMSIS/Include/core_cm7.h **** /**
2190:../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable I-Cache
2191:../Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on I-Cache
2192:../Drivers/CMSIS/Include/core_cm7.h ****   */
2193:../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableICache (void)
 253              		.loc 2 2193 22 view .LVU88
 254              	.LBB76:
2194:../Drivers/CMSIS/Include/core_cm7.h **** {
2195:../Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2196:../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 51


 255              		.loc 2 2196 5 view .LVU89
 256              	.LBB77:
 257              	.LBI77:
 258              		.file 3 "../Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.1
   5:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     02. February 2017
   6:../Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  36:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                     __asm
  37:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  39:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                  inline
  40:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  41:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  44:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  47:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  48:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  50:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  51:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  53:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 52


  54:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  55:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wpacked"
  56:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wattributes"
  57:../Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  58:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic pop
  59:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  60:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
  62:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  63:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  65:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  66:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  68:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT           struct __attribute__((packed, aligned(1)))
  69:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  71:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  72:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  73:../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  74:../Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  75:../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  76:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  77:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  78:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  79:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  80:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  81:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  82:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  83:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  84:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  85:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  86:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  91:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  92:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  93:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  95:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  97:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 102:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 103:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 104:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
 106:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 110:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 53


 111:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 115:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 116:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 117:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 118:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 119:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 120:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 121:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 122:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 123:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 125:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 126:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 127:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 128:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 129:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 131:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 132:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 133:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 134:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 135:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 136:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 137:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 138:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 139:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 140:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 142:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 143:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 144:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 145:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 146:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 147:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 148:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 149:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 150:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 151:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 152:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 153:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 154:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 155:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 156:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 157:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 158:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 159:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 160:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 161:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 162:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 164:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 165:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 54


 168:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 170:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 171:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 172:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 174:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 176:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 178:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 184:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 185:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 186:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 187:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 188:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 189:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 190:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 192:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 193:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 194:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 195:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 196:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 197:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 198:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 199:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 200:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 201:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 202:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 203:../Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 204:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 206:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 207:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 208:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 210:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 211:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 212:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 213:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 214:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 215:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 216:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 217:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 218:../Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 219:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 220:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 221:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 222:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 223:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 224:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 55


 225:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 227:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 228:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 229:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 230:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 231:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 232:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 233:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 234:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 235:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 238:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 239:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 240:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 241:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 242:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 243:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 244:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 245:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 246:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 247:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 248:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 249:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 250:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 251:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 252:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 253:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 254:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 255:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 256:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 257:../Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 258:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 259:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 260:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 261:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 265:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 266:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 267:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 268:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 269:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 270:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 271:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 272:../Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 273:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 275:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 276:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 277:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 278:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 56


 282:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 283:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 284:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 286:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 288:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 289:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 291:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 292:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 293:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 294:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 295:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 296:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 297:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 298:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 299:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 300:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 301:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 303:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 305:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 306:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 307:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 308:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 309:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 310:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 311:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 312:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 313:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 314:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 315:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 316:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 317:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 319:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 320:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 321:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 322:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 323:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 324:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 325:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 326:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 327:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 328:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 329:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 330:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 331:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 332:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 334:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 335:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 336:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 337:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 338:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 57


 339:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 340:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 341:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 342:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 343:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 344:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 346:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 347:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 348:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 349:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 350:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 351:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 352:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 353:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 354:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 356:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 359:../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 360:../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 361:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 362:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 363:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 364:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 365:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 366:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 367:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 368:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 369:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 370:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 371:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 373:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 374:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 375:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 376:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 377:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 378:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 379:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 380:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 381:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 382:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 383:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 384:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 385:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 386:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 387:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 388:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 389:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 390:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 391:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 393:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 394:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 58


 396:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 398:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 399:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 400:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 401:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 402:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 404:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 406:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 408:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 409:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 410:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 411:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 412:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 413:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 414:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 415:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 416:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 417:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 418:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 419:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 420:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 421:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 422:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 423:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 424:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 425:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 426:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 427:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 428:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 429:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 430:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 431:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 432:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 433:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 434:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 435:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 437:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 438:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 439:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 440:../Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 441:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 442:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 443:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 444:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 445:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 446:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 447:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 449:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 450:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 451:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 452:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 59


 453:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 455:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 457:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 459:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 460:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 461:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 462:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 463:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 464:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 465:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 466:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 467:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 468:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 469:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 470:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 471:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 474:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 476:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 477:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 478:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 479:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 480:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 481:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 482:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 483:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 484:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 485:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 486:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 487:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 488:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 489:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 490:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 491:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 492:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 493:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 494:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 495:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 496:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 497:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 498:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 499:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 501:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 503:../Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 504:../Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 505:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 506:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 507:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 508:../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 509:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 60


 510:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 512:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 513:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 514:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 515:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 516:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 517:../Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 518:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 520:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 521:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 522:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 524:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 525:../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 526:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 527:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 528:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 529:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 530:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 531:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 532:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 533:../Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 534:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 536:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 537:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 538:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 539:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 540:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 541:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 542:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 543:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 544:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 545:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 546:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 547:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 548:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 549:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 553:../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 556:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 557:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 558:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 559:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 560:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 561:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 562:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 563:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 564:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 565:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 566:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 61


 567:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 568:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 569:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 570:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 571:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 572:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 573:../Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 574:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 576:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 578:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 579:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 581:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 582:../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 583:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 585:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 586:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 587:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 588:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 589:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 590:../Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 591:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 592:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 593:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 594:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 595:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 596:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 599:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 600:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 601:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 602:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 603:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 604:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 605:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 606:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 607:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 608:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 609:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 610:../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 611:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 612:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 613:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 614:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 615:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 616:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 617:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 618:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 619:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 620:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 621:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 622:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 623:../Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 62


 624:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 625:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 626:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 627:../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 628:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 630:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 631:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 632:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 633:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 634:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 635:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 636:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 637:../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 638:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 639:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 640:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 641:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 642:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 643:../Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0U);
 644:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 645:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 646:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 649:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 650:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 651:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 652:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 653:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 654:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 655:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 656:../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 657:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 658:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 659:../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 660:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 661:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 662:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 663:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 664:../Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 665:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 666:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 667:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 668:../Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 669:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 671:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 672:../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 673:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 674:../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 675:../Drivers/CMSIS/Include/cmsis_gcc.h **** */
 676:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 677:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 678:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 679:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 680:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 63


 681:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 682:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 683:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 684:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 685:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 686:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 687:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 688:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 689:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 690:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 691:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 692:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 693:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 694:../Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 695:../Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 696:../Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("nop");
 697:../Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 698:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 699:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 702:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 703:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:../Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 705:../Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 706:../Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 707:../Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 708:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 709:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 710:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 711:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 712:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 713:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 714:../Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 715:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 716:../Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 717:../Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 718:../Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 719:../Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 720:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 721:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 723:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 724:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 725:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 726:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 727:../Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 728:../Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 729:../Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("sev");
 730:../Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 731:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 732:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 733:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 734:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 735:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 736:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 737:../Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 64


 738:../Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 739:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 740:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 741:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 742:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 743:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 744:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 745:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 746:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 747:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 748:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 749:../Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 750:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 751:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 259              		.loc 3 751 53 view .LVU90
 260              	.LBB78:
 752:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 753:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 261              		.loc 3 753 3 view .LVU91
 262              	.LBE78:
 263              	.LBE77:
 264              	.LBE76:
 265              	.LBE75:
 266              	.LBE103:
  76:main.cpp      **** 
 267              		.loc 1 76 1 is_stmt 0 view .LVU92
 268 0000 2DE98048 		push	{r7, fp, lr}
 269              		.cfi_def_cfa_offset 12
 270              		.cfi_offset 7, -12
 271              		.cfi_offset 11, -8
 272              		.cfi_offset 14, -4
 273 0004 9DB0     		sub	sp, sp, #116
 274              		.cfi_def_cfa_offset 128
 275              	.LBB104:
 276              	.LBB92:
 277              	.LBB91:
 278              	.LBB80:
 279              	.LBB79:
 280              		.loc 3 753 3 view .LVU93
 281              		.syntax unified
 282              	@ 753 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 283 0006 BFF34F8F 		dsb 0xF
 284              	@ 0 "" 2
 285              		.thumb
 286              		.syntax unified
 287              	.LBE79:
 288              	.LBE80:
2197:../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
 289              		.loc 2 2197 5 is_stmt 1 view .LVU94
 290              	.LBB81:
 291              	.LBI81:
 740:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 292              		.loc 3 740 53 view .LVU95
 293              	.LBB82:
 742:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 294              		.loc 3 742 3 view .LVU96
 295              		.syntax unified
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 65


 296              	@ 742 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 297 000a BFF36F8F 		isb 0xF
 298              	@ 0 "" 2
 299              		.thumb
 300              		.syntax unified
 301              	.LBE82:
 302              	.LBE81:
2198:../Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 303              		.loc 2 2198 5 view .LVU97
 304              		.loc 2 2198 18 is_stmt 0 view .LVU98
 305 000e 744B     		ldr	r3, .L30
 306 0010 0021     		movs	r1, #0
 307 0012 C3F85012 		str	r1, [r3, #592]
2199:../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 308              		.loc 2 2199 5 is_stmt 1 view .LVU99
 309              	.LBB83:
 310              	.LBI83:
 751:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 311              		.loc 3 751 53 view .LVU100
 312              	.LBB84:
 313              		.loc 3 753 3 view .LVU101
 314              		.syntax unified
 315              	@ 753 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 316 0016 BFF34F8F 		dsb 0xF
 317              	@ 0 "" 2
 318              		.thumb
 319              		.syntax unified
 320              	.LBE84:
 321              	.LBE83:
2200:../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
 322              		.loc 2 2200 5 view .LVU102
 323              	.LBB85:
 324              	.LBI85:
 740:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 325              		.loc 3 740 53 view .LVU103
 326              	.LBB86:
 742:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 327              		.loc 3 742 3 view .LVU104
 328              		.syntax unified
 329              	@ 742 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 330 001a BFF36F8F 		isb 0xF
 331              	@ 0 "" 2
 332              		.thumb
 333              		.syntax unified
 334              	.LBE86:
 335              	.LBE85:
2201:../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 336              		.loc 2 2201 5 view .LVU105
 337              		.loc 2 2201 14 is_stmt 0 view .LVU106
 338 001e 5A69     		ldr	r2, [r3, #20]
 339 0020 42F40032 		orr	r2, r2, #131072
 340 0024 5A61     		str	r2, [r3, #20]
2202:../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 341              		.loc 2 2202 5 is_stmt 1 view .LVU107
 342              	.LBB87:
 343              	.LBI87:
 751:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 66


 344              		.loc 3 751 53 view .LVU108
 345              	.LBB88:
 346              		.loc 3 753 3 view .LVU109
 347              		.syntax unified
 348              	@ 753 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 349 0026 BFF34F8F 		dsb 0xF
 350              	@ 0 "" 2
 351              		.thumb
 352              		.syntax unified
 353              	.LBE88:
 354              	.LBE87:
2203:../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
 355              		.loc 2 2203 5 view .LVU110
 356              	.LBB89:
 357              	.LBI89:
 740:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358              		.loc 3 740 53 view .LVU111
 359              	.LBB90:
 742:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360              		.loc 3 742 3 view .LVU112
 361              		.syntax unified
 362              	@ 742 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 363 002a BFF36F8F 		isb 0xF
 364              	@ 0 "" 2
 365              		.thumb
 366              		.syntax unified
 367              	.LBE90:
 368              	.LBE89:
 369              	.LBE91:
 370              	.LBE92:
 371              	.LBE104:
 332:main.cpp      **** 
 333:main.cpp      ****   /* Enable D-Cache */
 334:main.cpp      ****   SCB_EnableDCache();
 372              		.loc 1 334 3 view .LVU113
 373              	.LBB105:
 374              	.LBB93:
 375              	.LBI93:
2204:../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2205:../Drivers/CMSIS/Include/core_cm7.h **** }
2206:../Drivers/CMSIS/Include/core_cm7.h **** 
2207:../Drivers/CMSIS/Include/core_cm7.h **** 
2208:../Drivers/CMSIS/Include/core_cm7.h **** /**
2209:../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable I-Cache
2210:../Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off I-Cache
2211:../Drivers/CMSIS/Include/core_cm7.h ****   */
2212:../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_DisableICache (void)
2213:../Drivers/CMSIS/Include/core_cm7.h **** {
2214:../Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2215:../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2216:../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2217:../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
2218:../Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2219:../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2220:../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2221:../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2222:../Drivers/CMSIS/Include/core_cm7.h **** }
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 67


2223:../Drivers/CMSIS/Include/core_cm7.h **** 
2224:../Drivers/CMSIS/Include/core_cm7.h **** 
2225:../Drivers/CMSIS/Include/core_cm7.h **** /**
2226:../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate I-Cache
2227:../Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache
2228:../Drivers/CMSIS/Include/core_cm7.h ****   */
2229:../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateICache (void)
2230:../Drivers/CMSIS/Include/core_cm7.h **** {
2231:../Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2232:../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2233:../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2234:../Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2235:../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2236:../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2237:../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2238:../Drivers/CMSIS/Include/core_cm7.h **** }
2239:../Drivers/CMSIS/Include/core_cm7.h **** 
2240:../Drivers/CMSIS/Include/core_cm7.h **** 
2241:../Drivers/CMSIS/Include/core_cm7.h **** /**
2242:../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable D-Cache
2243:../Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on D-Cache
2244:../Drivers/CMSIS/Include/core_cm7.h ****   */
2245:../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableDCache (void)
 376              		.loc 2 2245 22 view .LVU114
 377              	.LBB94:
2246:../Drivers/CMSIS/Include/core_cm7.h **** {
2247:../Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2248:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
 378              		.loc 2 2248 5 view .LVU115
2249:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
 379              		.loc 2 2249 5 view .LVU116
2250:../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
 380              		.loc 2 2250 5 view .LVU117
2251:../Drivers/CMSIS/Include/core_cm7.h **** 
2252:../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 381              		.loc 2 2252 5 view .LVU118
 382              		.loc 2 2252 17 is_stmt 0 view .LVU119
 383 002e C3F88410 		str	r1, [r3, #132]
2253:../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 384              		.loc 2 2253 5 is_stmt 1 view .LVU120
 385              	.LBB95:
 386              	.LBI95:
 751:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 387              		.loc 3 751 53 view .LVU121
 388              	.LBB96:
 389              		.loc 3 753 3 view .LVU122
 390              		.syntax unified
 391              	@ 753 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 392 0032 BFF34F8F 		dsb 0xF
 393              	@ 0 "" 2
 394              		.thumb
 395              		.syntax unified
 396              	.LBE96:
 397              	.LBE95:
2254:../Drivers/CMSIS/Include/core_cm7.h **** 
2255:../Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
 398              		.loc 2 2255 5 view .LVU123
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 68


 399              		.loc 2 2255 12 is_stmt 0 view .LVU124
 400 0036 D3F88030 		ldr	r3, [r3, #128]
 401              	.LVL5:
2256:../Drivers/CMSIS/Include/core_cm7.h **** 
2257:../Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2258:../Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 402              		.loc 2 2258 5 is_stmt 1 view .LVU125
 403              		.loc 2 2258 10 is_stmt 0 view .LVU126
 404 003a C3F34E3C 		ubfx	ip, r3, #13, #15
2259:../Drivers/CMSIS/Include/core_cm7.h ****     do {
2260:../Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 405              		.loc 2 2260 12 view .LVU127
 406 003e C3F3C90E 		ubfx	lr, r3, #3, #10
 407 0042 4FEA4C1C 		lsl	ip, ip, #5
 408              	.LVL6:
 409              	.L15:
2259:../Drivers/CMSIS/Include/core_cm7.h ****     do {
 410              		.loc 2 2259 5 is_stmt 1 view .LVU128
 411              		.loc 2 2260 7 view .LVU129
2261:../Drivers/CMSIS/Include/core_cm7.h ****       do {
2262:../Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 412              		.loc 2 2262 52 is_stmt 0 view .LVU130
 413 0046 43F6E070 		movw	r0, #16352
2260:../Drivers/CMSIS/Include/core_cm7.h ****       do {
 414              		.loc 2 2260 12 view .LVU131
 415 004a 7346     		mov	r3, lr
 416              		.loc 2 2262 52 view .LVU132
 417 004c 0CEA0000 		and	r0, ip, r0
 418              	.L14:
 419              	.LVL7:
2261:../Drivers/CMSIS/Include/core_cm7.h ****       do {
 420              		.loc 2 2261 7 is_stmt 1 view .LVU133
 421              		.loc 2 2262 9 view .LVU134
 422              		.loc 2 2262 73 is_stmt 0 view .LVU135
 423 0050 40EA8371 		orr	r1, r0, r3, lsl #30
2263:../Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2264:../Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2265:../Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2266:../Drivers/CMSIS/Include/core_cm7.h ****         #endif
2267:../Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
 424              		.loc 2 2267 20 view .LVU136
 425 0054 013B     		subs	r3, r3, #1
 426              	.LVL8:
2262:../Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 427              		.loc 2 2262 20 view .LVU137
 428 0056 624A     		ldr	r2, .L30
 429              		.loc 2 2267 23 view .LVU138
 430 0058 5D1C     		adds	r5, r3, #1
2262:../Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 431              		.loc 2 2262 20 view .LVU139
 432 005a C2F86012 		str	r1, [r2, #608]
 433              		.loc 2 2267 23 is_stmt 1 view .LVU140
 434              	.LVL9:
 435              		.loc 2 2267 23 is_stmt 0 view .LVU141
 436 005e F7D1     		bne	.L14
2268:../Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
 437              		.loc 2 2268 20 is_stmt 1 view .LVU142
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 69


 438 0060 ACF1200C 		sub	ip, ip, #32
 439 0064 1CF1200F 		cmn	ip, #32
 440 0068 EDD1     		bne	.L15
2269:../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 441              		.loc 2 2269 5 view .LVU143
 442              	.LBB97:
 443              	.LBI97:
 751:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 444              		.loc 3 751 53 view .LVU144
 445              	.LBB98:
 446              		.loc 3 753 3 view .LVU145
 447              		.syntax unified
 448              	@ 753 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 449 006a BFF34F8F 		dsb 0xF
 450              	@ 0 "" 2
 451              		.thumb
 452              		.syntax unified
 453              	.LBE98:
 454              	.LBE97:
2270:../Drivers/CMSIS/Include/core_cm7.h **** 
2271:../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 455              		.loc 2 2271 5 view .LVU146
 456              		.loc 2 2271 14 is_stmt 0 view .LVU147
 457 006e 5369     		ldr	r3, [r2, #20]
 458              	.LVL10:
 459              		.loc 2 2271 14 view .LVU148
 460 0070 43F48033 		orr	r3, r3, #65536
 461 0074 5361     		str	r3, [r2, #20]
2272:../Drivers/CMSIS/Include/core_cm7.h **** 
2273:../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 462              		.loc 2 2273 5 is_stmt 1 view .LVU149
 463              	.LBB99:
 464              	.LBI99:
 751:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 465              		.loc 3 751 53 view .LVU150
 466              	.LBB100:
 467              		.loc 3 753 3 view .LVU151
 468              		.syntax unified
 469              	@ 753 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 470 0076 BFF34F8F 		dsb 0xF
 471              	@ 0 "" 2
 472              		.thumb
 473              		.syntax unified
 474              	.LBE100:
 475              	.LBE99:
2274:../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
 476              		.loc 2 2274 5 view .LVU152
 477              	.LBB101:
 478              	.LBI101:
 740:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 479              		.loc 3 740 53 view .LVU153
 480              	.LBB102:
 742:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 481              		.loc 3 742 3 view .LVU154
 482              		.syntax unified
 483              	@ 742 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 484 007a BFF36F8F 		isb 0xF
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 70


 485              	@ 0 "" 2
 486              	.LVL11:
 742:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 487              		.loc 3 742 3 is_stmt 0 view .LVU155
 488              		.thumb
 489              		.syntax unified
 490              	.LBE102:
 491              	.LBE101:
 492              	.LBE94:
 493              	.LBE93:
 494              	.LBE105:
  93:main.cpp      **** 
 495              		.loc 1 93 3 is_stmt 1 view .LVU156
  93:main.cpp      **** 
 496              		.loc 1 93 11 is_stmt 0 view .LVU157
 497 007e FFF7FEFF 		bl	HAL_Init
 498              	.LVL12:
  96:main.cpp      **** 
 499              		.loc 1 96 3 is_stmt 1 view .LVU158
 500              	.LBB106:
 501              	.LBI106:
 265:main.cpp      **** {
 502              		.loc 1 265 13 view .LVU159
 503              	.LBB107:
 267:main.cpp      ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 504              		.loc 1 267 3 view .LVU160
 268:main.cpp      ****   HAL_StatusTypeDef ret = HAL_OK;
 505              		.loc 1 268 3 view .LVU161
 269:main.cpp      **** 
 506              		.loc 1 269 3 view .LVU162
 272:main.cpp      **** 
 507              		.loc 1 272 4 view .LVU163
 272:main.cpp      **** 
 508              		.loc 1 272 26 is_stmt 0 view .LVU164
 509 0082 0220     		movs	r0, #2
 510 0084 FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 511              	.LVL13:
 277:main.cpp      **** 
 512              		.loc 1 277 3 is_stmt 1 view .LVU165
 513              	.LBB108:
 277:main.cpp      **** 
 514              		.loc 1 277 3 view .LVU166
 515 0088 564A     		ldr	r2, .L30+4
 516 008a 0021     		movs	r1, #0
 517 008c 564B     		ldr	r3, .L30+8
 518 008e 0091     		str	r1, [sp]
 277:main.cpp      **** 
 519              		.loc 1 277 3 view .LVU167
 277:main.cpp      **** 
 520              		.loc 1 277 3 view .LVU168
 521 0090 D16A     		ldr	r1, [r2, #44]
 522 0092 21F00101 		bic	r1, r1, #1
 523 0096 D162     		str	r1, [r2, #44]
 277:main.cpp      **** 
 524              		.loc 1 277 3 view .LVU169
 525 0098 D26A     		ldr	r2, [r2, #44]
 526 009a 02F00102 		and	r2, r2, #1
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 71


 527 009e 0092     		str	r2, [sp]
 277:main.cpp      **** 
 528              		.loc 1 277 3 view .LVU170
 529 00a0 9A69     		ldr	r2, [r3, #24]
 530 00a2 42F44042 		orr	r2, r2, #49152
 531 00a6 9A61     		str	r2, [r3, #24]
 277:main.cpp      **** 
 532              		.loc 1 277 3 view .LVU171
 533 00a8 9B69     		ldr	r3, [r3, #24]
 534 00aa 03F44043 		and	r3, r3, #49152
 535 00ae 0093     		str	r3, [sp]
 277:main.cpp      **** 
 536              		.loc 1 277 3 view .LVU172
 537 00b0 009B     		ldr	r3, [sp]
 538              	.L16:
 539              	.LBE108:
 279:main.cpp      **** 
 540              		.loc 1 279 3 view .LVU173
 279:main.cpp      **** 
 541              		.loc 1 279 9 view .LVU174
 279:main.cpp      **** 
 542              		.loc 1 279 10 is_stmt 0 view .LVU175
 543 00b2 4D4B     		ldr	r3, .L30+8
 544 00b4 9B69     		ldr	r3, [r3, #24]
 279:main.cpp      **** 
 545              		.loc 1 279 9 view .LVU176
 546 00b6 9C04     		lsls	r4, r3, #18
 547 00b8 FBD5     		bpl	.L16
 282:main.cpp      ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 548              		.loc 1 282 3 is_stmt 1 view .LVU177
 283:main.cpp      ****   RCC_OscInitStruct.HSIState = RCC_HSI_OFF;
 549              		.loc 1 283 30 is_stmt 0 view .LVU178
 550 00ba 4FF48032 		mov	r2, #65536
 284:main.cpp      ****   RCC_OscInitStruct.CSIState = RCC_CSI_OFF;
 551              		.loc 1 284 30 view .LVU179
 552 00be 0023     		movs	r3, #0
 286:main.cpp      ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 553              		.loc 1 286 34 view .LVU180
 554 00c0 0224     		movs	r4, #2
 282:main.cpp      ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 555              		.loc 1 282 36 view .LVU181
 556 00c2 0127     		movs	r7, #1
 283:main.cpp      ****   RCC_OscInitStruct.HSIState = RCC_HSI_OFF;
 557              		.loc 1 283 30 view .LVU182
 558 00c4 0A92     		str	r2, [sp, #40]
 289:main.cpp      ****   RCC_OscInitStruct.PLL.PLLN = 160;
 559              		.loc 1 289 30 view .LVU183
 560 00c6 0522     		movs	r2, #5
 294:main.cpp      **** 
 561              		.loc 1 294 30 view .LVU184
 562 00c8 4FF00408 		mov	r8, #4
 297:main.cpp      ****   ret = HAL_RCC_OscConfig(&RCC_OscInitStruct);
 563              		.loc 1 297 32 view .LVU185
 564 00cc 0825     		movs	r5, #8
 289:main.cpp      ****   RCC_OscInitStruct.PLL.PLLN = 160;
 565              		.loc 1 289 30 view .LVU186
 566 00ce 1492     		str	r2, [sp, #80]
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 72


 290:main.cpp      ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 567              		.loc 1 290 30 view .LVU187
 568 00d0 A022     		movs	r2, #160
 298:main.cpp      ****   if(ret != HAL_OK)
 569              		.loc 1 298 26 view .LVU188
 570 00d2 09A8     		add	r0, sp, #36
 284:main.cpp      ****   RCC_OscInitStruct.CSIState = RCC_CSI_OFF;
 571              		.loc 1 284 30 view .LVU189
 572 00d4 0C93     		str	r3, [sp, #48]
 282:main.cpp      ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 573              		.loc 1 282 36 view .LVU190
 574 00d6 0997     		str	r7, [sp, #36]
 283:main.cpp      ****   RCC_OscInitStruct.HSIState = RCC_HSI_OFF;
 575              		.loc 1 283 3 is_stmt 1 view .LVU191
 284:main.cpp      ****   RCC_OscInitStruct.CSIState = RCC_CSI_OFF;
 576              		.loc 1 284 3 view .LVU192
 285:main.cpp      ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 577              		.loc 1 285 3 view .LVU193
 286:main.cpp      ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 578              		.loc 1 286 3 view .LVU194
 285:main.cpp      ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 579              		.loc 1 285 30 is_stmt 0 view .LVU195
 580 00d8 1093     		str	r3, [sp, #64]
 291:main.cpp      ****   RCC_OscInitStruct.PLL.PLLP = 2;
 581              		.loc 1 291 34 view .LVU196
 582 00da 1B93     		str	r3, [sp, #108]
 293:main.cpp      ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 583              		.loc 1 293 30 view .LVU197
 584 00dc 1894     		str	r4, [sp, #96]
 296:main.cpp      ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
 585              		.loc 1 296 35 view .LVU198
 586 00de 1A93     		str	r3, [sp, #104]
 294:main.cpp      **** 
 587              		.loc 1 294 30 view .LVU199
 588 00e0 CDF85C80 		str	r8, [sp, #92]
 297:main.cpp      ****   ret = HAL_RCC_OscConfig(&RCC_OscInitStruct);
 589              		.loc 1 297 32 view .LVU200
 590 00e4 1995     		str	r5, [sp, #100]
 287:main.cpp      **** 
 591              		.loc 1 287 35 view .LVU201
 592 00e6 CDE91244 		strd	r4, r4, [sp, #72]
 289:main.cpp      ****   RCC_OscInitStruct.PLL.PLLN = 160;
 593              		.loc 1 289 3 is_stmt 1 view .LVU202
 290:main.cpp      ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 594              		.loc 1 290 3 view .LVU203
 290:main.cpp      ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 595              		.loc 1 290 30 is_stmt 0 view .LVU204
 596 00ea CDE91524 		strd	r2, r4, [sp, #84]
 291:main.cpp      ****   RCC_OscInitStruct.PLL.PLLP = 2;
 597              		.loc 1 291 3 is_stmt 1 view .LVU205
 292:main.cpp      ****   RCC_OscInitStruct.PLL.PLLR = 2;
 598              		.loc 1 292 3 view .LVU206
 293:main.cpp      ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 599              		.loc 1 293 3 view .LVU207
 294:main.cpp      **** 
 600              		.loc 1 294 3 view .LVU208
 296:main.cpp      ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 73


 601              		.loc 1 296 3 view .LVU209
 297:main.cpp      ****   ret = HAL_RCC_OscConfig(&RCC_OscInitStruct);
 602              		.loc 1 297 3 view .LVU210
 298:main.cpp      ****   if(ret != HAL_OK)
 603              		.loc 1 298 3 view .LVU211
 298:main.cpp      ****   if(ret != HAL_OK)
 604              		.loc 1 298 26 is_stmt 0 view .LVU212
 605 00ee FFF7FEFF 		bl	HAL_RCC_OscConfig
 606              	.LVL14:
 299:main.cpp      ****   {
 607              		.loc 1 299 3 is_stmt 1 view .LVU213
 608 00f2 00B1     		cbz	r0, .L17
 609              	.L18:
 610              	.LBE107:
 611              	.LBE106:
 238:main.cpp      ****   {
 612              		.loc 1 238 3 view .LVU214
 238:main.cpp      ****   {
 613              		.loc 1 238 3 view .LVU215
 238:main.cpp      ****   {
 614              		.loc 1 238 3 view .LVU216
 238:main.cpp      ****   {
 615              		.loc 1 238 3 view .LVU217
 616 00f4 FEE7     		b	.L18
 617              	.L17:
 618              	.LBB110:
 619              	.LBB109:
 305:main.cpp      ****                                  RCC_CLOCKTYPE_PCLK2  | RCC_CLOCKTYPE_D3PCLK1);
 620              		.loc 1 305 3 view .LVU218
 311:main.cpp      ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 621              		.loc 1 311 36 is_stmt 0 view .LVU219
 622 00f6 4FF04009 		mov	r9, #64
 308:main.cpp      ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 623              		.loc 1 308 34 view .LVU220
 624 00fa 3F23     		movs	r3, #63
 625 00fc 4FF0030A 		mov	r10, #3
 313:main.cpp      ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 626              		.loc 1 313 36 view .LVU221
 627 0100 4FF4806B 		mov	fp, #1024
 315:main.cpp      ****   if(ret != HAL_OK)
 628              		.loc 1 315 28 view .LVU222
 629 0104 4146     		mov	r1, r8
 314:main.cpp      ****   ret = HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4);
 630              		.loc 1 314 36 view .LVU223
 631 0106 CDF82090 		str	r9, [sp, #32]
 313:main.cpp      ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 632              		.loc 1 313 36 view .LVU224
 633 010a CDF81CB0 		str	fp, [sp, #28]
 310:main.cpp      ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 634              		.loc 1 310 35 view .LVU225
 635 010e CDE90305 		strd	r0, r5, [sp, #12]
 315:main.cpp      ****   if(ret != HAL_OK)
 636              		.loc 1 315 28 view .LVU226
 637 0112 01A8     		add	r0, sp, #4
 638              	.LVL15:
 312:main.cpp      ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 639              		.loc 1 312 36 view .LVU227
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 74


 640 0114 CDE90599 		strd	r9, r9, [sp, #20]
 308:main.cpp      ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 641              		.loc 1 308 34 view .LVU228
 642 0118 CDE9013A 		strd	r3, r10, [sp, #4]
 309:main.cpp      ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 643              		.loc 1 309 3 is_stmt 1 view .LVU229
 310:main.cpp      ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 644              		.loc 1 310 3 view .LVU230
 311:main.cpp      ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 645              		.loc 1 311 3 view .LVU231
 312:main.cpp      ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 646              		.loc 1 312 3 view .LVU232
 313:main.cpp      ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 647              		.loc 1 313 3 view .LVU233
 314:main.cpp      ****   ret = HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4);
 648              		.loc 1 314 3 view .LVU234
 315:main.cpp      ****   if(ret != HAL_OK)
 649              		.loc 1 315 3 view .LVU235
 315:main.cpp      ****   if(ret != HAL_OK)
 650              		.loc 1 315 28 is_stmt 0 view .LVU236
 651 011c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 652              	.LVL16:
 316:main.cpp      ****   {
 653              		.loc 1 316 3 is_stmt 1 view .LVU237
 654 0120 0646     		mov	r6, r0
 655 0122 0028     		cmp	r0, #0
 656 0124 5BD1     		bne	.L20
 657              	.LVL17:
 316:main.cpp      ****   {
 658              		.loc 1 316 3 is_stmt 0 view .LVU238
 659              	.LBE109:
 660              	.LBE110:
 106:main.cpp      **** 
 661              		.loc 1 106 3 is_stmt 1 view .LVU239
 662              	.LBB111:
 106:main.cpp      **** 
 663              		.loc 1 106 3 view .LVU240
 106:main.cpp      **** 
 664              		.loc 1 106 3 view .LVU241
 665              	.LBE111:
 110:main.cpp      **** 
 666              		.loc 1 110 39 is_stmt 0 view .LVU242
 667 0126 314D     		ldr	r5, .L30+12
 117:main.cpp      ****   DMA_Handle.Init.Mode                = DMA_CIRCULAR;
 668              		.loc 1 117 39 view .LVU243
 669 0128 4FF48051 		mov	r1, #4096
 670              	.LBB112:
 106:main.cpp      **** 
 671              		.loc 1 106 3 view .LVU244
 672 012c 304B     		ldr	r3, .L30+16
 673              	.LBE112:
 114:main.cpp      ****   DMA_Handle.Init.MemInc              = DMA_MINC_ENABLE;
 674              		.loc 1 114 39 view .LVU245
 675 012e E860     		str	r0, [r5, #12]
 113:main.cpp      ****   DMA_Handle.Init.PeriphInc           = DMA_PINC_DISABLE;
 676              		.loc 1 113 39 view .LVU246
 677 0130 C5F80890 		str	r9, [r5, #8]
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 75


 115:main.cpp      ****   DMA_Handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 678              		.loc 1 115 39 view .LVU247
 679 0134 C5F810B0 		str	fp, [r5, #16]
 121:main.cpp      ****   DMA_Handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 680              		.loc 1 121 39 view .LVU248
 681 0138 C5F828A0 		str	r10, [r5, #40]
 112:main.cpp      ****   DMA_Handle.Init.Direction           = DMA_MEMORY_TO_PERIPH;
 682              		.loc 1 112 39 view .LVU249
 683 013c 6F60     		str	r7, [r5, #4]
 120:main.cpp      ****   DMA_Handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 684              		.loc 1 120 39 view .LVU250
 685 013e C5E90800 		strd	r0, r0, [r5, #32]
 123:main.cpp      **** 
 686              		.loc 1 123 39 view .LVU251
 687 0142 C5E90B00 		strd	r0, r0, [r5, #44]
 688              	.LBB113:
 106:main.cpp      **** 
 689              		.loc 1 106 3 view .LVU252
 690 0146 D3F8E020 		ldr	r2, [r3, #224]
 691              	.LBE113:
 126:main.cpp      **** 
 692              		.loc 1 126 15 view .LVU253
 693 014a 2846     		mov	r0, r5
 694              	.LBB114:
 106:main.cpp      **** 
 695              		.loc 1 106 3 view .LVU254
 696 014c 42F40012 		orr	r2, r2, #2097152
 697 0150 C3F8E020 		str	r2, [r3, #224]
 106:main.cpp      **** 
 698              		.loc 1 106 3 is_stmt 1 view .LVU255
 699 0154 D3F8E030 		ldr	r3, [r3, #224]
 700 0158 03F40013 		and	r3, r3, #2097152
 701 015c 0193     		str	r3, [sp, #4]
 106:main.cpp      **** 
 702              		.loc 1 106 3 view .LVU256
 703 015e 019B     		ldr	r3, [sp, #4]
 704              	.LBE114:
 110:main.cpp      **** 
 705              		.loc 1 110 3 view .LVU257
 110:main.cpp      **** 
 706              		.loc 1 110 39 is_stmt 0 view .LVU258
 707 0160 244B     		ldr	r3, .L30+20
 708 0162 2B60     		str	r3, [r5]
 112:main.cpp      ****   DMA_Handle.Init.Direction           = DMA_MEMORY_TO_PERIPH;
 709              		.loc 1 112 3 is_stmt 1 view .LVU259
 113:main.cpp      ****   DMA_Handle.Init.PeriphInc           = DMA_PINC_DISABLE;
 710              		.loc 1 113 3 view .LVU260
 114:main.cpp      ****   DMA_Handle.Init.MemInc              = DMA_MINC_ENABLE;
 711              		.loc 1 114 3 view .LVU261
 115:main.cpp      ****   DMA_Handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 712              		.loc 1 115 3 view .LVU262
 116:main.cpp      ****   DMA_Handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 713              		.loc 1 116 3 view .LVU263
 117:main.cpp      ****   DMA_Handle.Init.Mode                = DMA_CIRCULAR;
 714              		.loc 1 117 39 is_stmt 0 view .LVU264
 715 0164 4FF48043 		mov	r3, #16384
 716 0168 C5E90513 		strd	r1, r3, [r5, #20]
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 76


 118:main.cpp      ****   DMA_Handle.Init.Priority            = DMA_PRIORITY_LOW;
 717              		.loc 1 118 3 is_stmt 1 view .LVU265
 118:main.cpp      ****   DMA_Handle.Init.Priority            = DMA_PRIORITY_LOW;
 718              		.loc 1 118 39 is_stmt 0 view .LVU266
 719 016c 4FF48073 		mov	r3, #256
 720 0170 EB61     		str	r3, [r5, #28]
 119:main.cpp      ****   DMA_Handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 721              		.loc 1 119 3 is_stmt 1 view .LVU267
 120:main.cpp      ****   DMA_Handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 722              		.loc 1 120 3 view .LVU268
 121:main.cpp      ****   DMA_Handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 723              		.loc 1 121 3 view .LVU269
 122:main.cpp      ****   DMA_Handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 724              		.loc 1 122 3 view .LVU270
 123:main.cpp      **** 
 725              		.loc 1 123 3 view .LVU271
 126:main.cpp      **** 
 726              		.loc 1 126 3 view .LVU272
 126:main.cpp      **** 
 727              		.loc 1 126 15 is_stmt 0 view .LVU273
 728 0172 FFF7FEFF 		bl	HAL_DMA_Init
 729              	.LVL18:
 129:main.cpp      ****   HAL_DMA_RegisterCallback(&DMA_Handle, HAL_DMA_XFER_ERROR_CB_ID, HAL_TransferError);
 730              		.loc 1 129 3 is_stmt 1 view .LVU274
 129:main.cpp      ****   HAL_DMA_RegisterCallback(&DMA_Handle, HAL_DMA_XFER_ERROR_CB_ID, HAL_TransferError);
 731              		.loc 1 129 27 is_stmt 0 view .LVU275
 732 0176 3246     		mov	r2, r6
 733 0178 3146     		mov	r1, r6
 734 017a 2846     		mov	r0, r5
 735 017c FFF7FEFF 		bl	HAL_DMA_RegisterCallback
 736              	.LVL19:
 130:main.cpp      **** 
 737              		.loc 1 130 3 is_stmt 1 view .LVU276
 130:main.cpp      **** 
 738              		.loc 1 130 27 is_stmt 0 view .LVU277
 739 0180 4146     		mov	r1, r8
 740 0182 1D4A     		ldr	r2, .L30+24
 741 0184 2846     		mov	r0, r5
 742 0186 FFF7FEFF 		bl	HAL_DMA_RegisterCallback
 743              	.LVL20:
 133:main.cpp      ****   HAL_NVIC_EnableIRQ(BDMA_Channel0_IRQn);
 744              		.loc 1 133 3 is_stmt 1 view .LVU278
 133:main.cpp      ****   HAL_NVIC_EnableIRQ(BDMA_Channel0_IRQn);
 745              		.loc 1 133 23 is_stmt 0 view .LVU279
 746 018a 3A46     		mov	r2, r7
 747 018c 3146     		mov	r1, r6
 748 018e 8120     		movs	r0, #129
 749 0190 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 750              	.LVL21:
 134:main.cpp      **** 
 751              		.loc 1 134 3 is_stmt 1 view .LVU280
 134:main.cpp      **** 
 752              		.loc 1 134 21 is_stmt 0 view .LVU281
 753 0194 8120     		movs	r0, #129
 754 0196 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 755              	.LVL22:
 137:main.cpp      ****   dmamux_ReqGenParams.Polarity  = HAL_DMAMUX_REQ_GEN_RISING;      /* External request signal edge i
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 77


 756              		.loc 1 137 3 is_stmt 1 view .LVU282
 138:main.cpp      ****   dmamux_ReqGenParams.RequestNumber = 1;                          /* 1 requests on each edge of the
 757              		.loc 1 138 33 is_stmt 0 view .LVU283
 758 019a 4FF40033 		mov	r3, #131072
 759 019e 0A20     		movs	r0, #10
 141:main.cpp      **** 
 760              		.loc 1 141 38 view .LVU284
 761 01a0 09A9     		add	r1, sp, #36
 139:main.cpp      **** 
 762              		.loc 1 139 37 view .LVU285
 763 01a2 0B97     		str	r7, [sp, #44]
 138:main.cpp      ****   dmamux_ReqGenParams.RequestNumber = 1;                          /* 1 requests on each edge of the
 764              		.loc 1 138 33 view .LVU286
 765 01a4 CDE90903 		strd	r0, r3, [sp, #36]
 139:main.cpp      **** 
 766              		.loc 1 139 3 is_stmt 1 view .LVU287
 141:main.cpp      **** 
 767              		.loc 1 141 3 view .LVU288
 141:main.cpp      **** 
 768              		.loc 1 141 38 is_stmt 0 view .LVU289
 769 01a8 2846     		mov	r0, r5
 770 01aa FFF7FEFF 		bl	HAL_DMAEx_ConfigMuxRequestGenerator
 771              	.LVL23:
 144:main.cpp      ****   HAL_NVIC_EnableIRQ(DMAMUX2_OVR_IRQn);
 772              		.loc 1 144 3 is_stmt 1 view .LVU290
 144:main.cpp      ****   HAL_NVIC_EnableIRQ(DMAMUX2_OVR_IRQn);
 773              		.loc 1 144 23 is_stmt 0 view .LVU291
 774 01ae 3A46     		mov	r2, r7
 775 01b0 3146     		mov	r1, r6
 776 01b2 8020     		movs	r0, #128
 777 01b4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 778              	.LVL24:
 145:main.cpp      **** 
 779              		.loc 1 145 3 is_stmt 1 view .LVU292
 145:main.cpp      **** 
 780              		.loc 1 145 21 is_stmt 0 view .LVU293
 781 01b8 8020     		movs	r0, #128
 782 01ba FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 783              	.LVL25:
 147:main.cpp      **** 
 784              		.loc 1 147 3 is_stmt 1 view .LVU294
 147:main.cpp      **** 
 785              		.loc 1 147 39 is_stmt 0 view .LVU295
 786 01be 2846     		mov	r0, r5
 787 01c0 FFF7FEFF 		bl	HAL_DMAEx_EnableMuxRequestGenerator
 788              	.LVL26:
 150:main.cpp      **** 
 789              		.loc 1 150 3 is_stmt 1 view .LVU296
 150:main.cpp      **** 
 790              		.loc 1 150 15 is_stmt 0 view .LVU297
 791 01c4 FFF7FEFF 		bl	_Z12LPTIM_Configv
 792              	.LVL27:
 155:main.cpp      **** 
 793              		.loc 1 155 3 is_stmt 1 view .LVU298
 155:main.cpp      **** 
 794              		.loc 1 155 19 is_stmt 0 view .LVU299
 795 01c8 0C4A     		ldr	r2, .L30+28
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 78


 796 01ca 2346     		mov	r3, r4
 797 01cc 0C49     		ldr	r1, .L30+32
 798 01ce 2846     		mov	r0, r5
 799 01d0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 800              	.LVL28:
 801 01d4 0B4A     		ldr	r2, .L30+36
 802              	.L21:
 158:main.cpp      ****   {
 803              		.loc 1 158 3 is_stmt 1 view .LVU300
 160:main.cpp      ****     {
 804              		.loc 1 160 5 view .LVU301
 160:main.cpp      ****     {
 805              		.loc 1 160 30 is_stmt 0 view .LVU302
 806 01d6 1368     		ldr	r3, [r2]
 160:main.cpp      ****     {
 807              		.loc 1 160 5 view .LVU303
 808 01d8 002B     		cmp	r3, #0
 809 01da FCD0     		beq	.L21
 810              	.L22:
 238:main.cpp      ****   {
 811              		.loc 1 238 3 is_stmt 1 view .LVU304
 238:main.cpp      ****   {
 812              		.loc 1 238 3 view .LVU305
 238:main.cpp      ****   {
 813              		.loc 1 238 3 view .LVU306
 238:main.cpp      ****   {
 814              		.loc 1 238 3 view .LVU307
 815 01dc FEE7     		b	.L22
 816              	.LVL29:
 817              	.L20:
 238:main.cpp      ****   {
 818              		.loc 1 238 3 view .LVU308
 238:main.cpp      ****   {
 819              		.loc 1 238 3 view .LVU309
 238:main.cpp      ****   {
 820              		.loc 1 238 3 view .LVU310
 238:main.cpp      ****   {
 821              		.loc 1 238 3 view .LVU311
 822 01de FEE7     		b	.L20
 823              	.L31:
 824              		.align	2
 825              	.L30:
 826 01e0 00ED00E0 		.word	-536810240
 827 01e4 00040058 		.word	1476396032
 828 01e8 00480258 		.word	1476544512
 829 01ec 00000000 		.word	.LANCHOR2
 830 01f0 00440258 		.word	1476543488
 831 01f4 08540258 		.word	1476547592
 832 01f8 00000000 		.word	_ZL17HAL_TransferErrorP19__DMA_HandleTypeDef
 833 01fc 14000258 		.word	1476526100
 834 0200 00000000 		.word	.LANCHOR3
 835 0204 00000000 		.word	.LANCHOR0
 836              		.cfi_endproc
 837              	.LFE562:
 839              		.global	LptimHandle
 840              		.global	DMA_Handle
 841              		.global	SRC_Buffer_LED1_Toggle
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 79


 842              		.global	DMA_TransferErrorFlag
 843              		.section	.RAM_D3,"aw"
 844              		.align	2
 845              		.set	.LANCHOR3,. + 0
 848              	SRC_Buffer_LED1_Toggle:
 849 0000 00000000 		.word	0
 850 0004 01000000 		.word	1
 851              		.section	.bss.DMA_Handle,"aw",%nobits
 852              		.align	2
 853              		.set	.LANCHOR2,. + 0
 856              	DMA_Handle:
 857 0000 00000000 		.space	120
 857      00000000 
 857      00000000 
 857      00000000 
 857      00000000 
 858              		.section	.bss.DMA_TransferErrorFlag,"aw",%nobits
 859              		.align	2
 860              		.set	.LANCHOR0,. + 0
 863              	DMA_TransferErrorFlag:
 864 0000 00000000 		.space	4
 865              		.section	.bss.LptimHandle,"aw",%nobits
 866              		.align	2
 867              		.set	.LANCHOR1,. + 0
 870              	LptimHandle:
 871 0000 00000000 		.space	56
 871      00000000 
 871      00000000 
 871      00000000 
 871      00000000 
 872              		.text
 873              	.Letext0:
 874              		.file 4 "../Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h750xx.h"
 875              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 876              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 877              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 878              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 879              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 880              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 881              		.file 11 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 882              		.file 12 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 883              		.file 13 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 884              		.file 14 "../Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 885              		.file 15 "../Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 886              		.file 16 "../Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc_ex.h"
 887              		.file 17 "../Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 888              		.file 18 "../Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma_ex.h"
 889              		.file 19 "../Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_lptim.h"
 890              		.file 20 "../Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 891              		.file 21 "../Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 892              		.file 22 "../Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 893              		.file 23 "<built-in>"
 894              		.file 24 "../src/per/tim.h"
ARM GAS  C:\cygwin64\tmp\ccnbLofW.s 			page 80


DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
C:\cygwin64\tmp\ccnbLofW.s:19     .text._ZL17HAL_TransferErrorP19__DMA_HandleTypeDef:00000000 $t
C:\cygwin64\tmp\ccnbLofW.s:25     .text._ZL17HAL_TransferErrorP19__DMA_HandleTypeDef:00000000 _ZL17HAL_TransferErrorP19__DMA_HandleTypeDef
C:\cygwin64\tmp\ccnbLofW.s:44     .text._ZL17HAL_TransferErrorP19__DMA_HandleTypeDef:00000008 $d
C:\cygwin64\tmp\ccnbLofW.s:49     .text._Z12LPTIM_Configv:00000000 $t
C:\cygwin64\tmp\ccnbLofW.s:56     .text._Z12LPTIM_Configv:00000000 _Z12LPTIM_Configv
C:\cygwin64\tmp\ccnbLofW.s:222    .text._Z12LPTIM_Configv:00000090 $d
C:\cygwin64\tmp\ccnbLofW.s:228    .text.startup.main:00000000 $t
C:\cygwin64\tmp\ccnbLofW.s:235    .text.startup.main:00000000 main
C:\cygwin64\tmp\ccnbLofW.s:826    .text.startup.main:000001e0 $d
C:\cygwin64\tmp\ccnbLofW.s:870    .bss.LptimHandle:00000000 LptimHandle
C:\cygwin64\tmp\ccnbLofW.s:856    .bss.DMA_Handle:00000000 DMA_Handle
C:\cygwin64\tmp\ccnbLofW.s:848    .RAM_D3:00000000 SRC_Buffer_LED1_Toggle
C:\cygwin64\tmp\ccnbLofW.s:863    .bss.DMA_TransferErrorFlag:00000000 DMA_TransferErrorFlag
C:\cygwin64\tmp\ccnbLofW.s:844    .RAM_D3:00000000 $d
C:\cygwin64\tmp\ccnbLofW.s:852    .bss.DMA_Handle:00000000 $d
C:\cygwin64\tmp\ccnbLofW.s:859    .bss.DMA_TransferErrorFlag:00000000 $d
C:\cygwin64\tmp\ccnbLofW.s:866    .bss.LptimHandle:00000000 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCCEx_PeriphCLKConfig
HAL_LPTIM_Init
HAL_LPTIM_PWM_Start
HAL_Init
HAL_PWREx_ConfigSupply
HAL_RCC_ClockConfig
HAL_DMA_Init
HAL_DMA_RegisterCallback
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_DMAEx_ConfigMuxRequestGenerator
HAL_DMAEx_EnableMuxRequestGenerator
HAL_DMA_Start_IT
